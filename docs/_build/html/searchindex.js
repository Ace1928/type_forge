Search.setIndex({"alltitles":{")":[[5,"id13"],[6,"id13"],[9,"id5"],[28,"id28"],[28,"id34"],[28,"id45"]],"API Documentation":[[32,"api-documentation"]],"API Reference":[[3,null]],"Attributes":[[5,"attributes"],[7,"attributes"],[8,"attributes"],[9,"attributes"],[10,"attributes"],[12,"attributes"],[13,"attributes"],[14,"attributes"],[15,"attributes"],[16,"attributes"],[17,"attributes"],[18,"attributes"],[19,"attributes"],[20,"attributes"],[21,"attributes"],[25,"attributes"],[26,"attributes"],[27,"attributes"],[28,"attributes"]],"Basic Usage of the type_forge Module":[[29,null]],"Basic Validators":[[2,"basic-validators"]],"Classes":[[4,"classes"],[5,"classes"],[6,"classes"],[8,"classes"],[9,"classes"],[11,"classes"],[12,"classes"],[13,"classes"],[15,"classes"],[17,"classes"],[18,"classes"],[20,"classes"],[25,"classes"],[26,"classes"],[27,"classes"],[28,"classes"]],"Combining Custom Validators":[[30,"combining-custom-validators"]],"Composite Validators":[[2,"composite-validators"]],"Conclusion":[[0,"conclusion"],[2,"conclusion"],[29,"conclusion"],[30,"conclusion"]],"Contributing":[[31,"contributing"]],"Core Components":[[15,"core-components"]],"Creating a Custom Validator":[[30,"creating-a-custom-validator"]],"Custom Validators":[[2,"custom-validators"]],"Custom Validators in Type Forge":[[30,null]],"Documentation":[[31,"documentation"]],"Documentation Links":[[1,"documentation-links"]],"EIDOS: Self-Image Core Framework":[[0,null]],"EIDOS: Self-Image Core Framework API Documentation":[[1,null]],"EIDOSIAN TYPE FORGE DOCUMENTATION":[[32,null]],"EIDOSIAN VALIDATORS":[[2,null]],"Example":[[6,null],[10,null],[15,null]],"Example 1: Basic Type Forging":[[29,"example-1-basic-type-forging"]],"Example 2: Using Validators":[[29,"example-2-using-validators"]],"Example 3: Custom Type Creation":[[29,"example-3-custom-type-creation"]],"Example Implementation":[[2,"example-implementation"]],"Example Usage":[[2,"example-usage"],[2,"id1"]],"Examples":[[32,"examples"]],"Exceptions":[[5,"exceptions"],[6,"exceptions"]],"Features":[[15,"features"]],"Functions":[[12,"functions"],[15,"functions"],[16,"functions"],[17,"functions"],[19,"functions"],[20,"functions"],[22,"functions"],[24,"functions"],[26,"functions"],[28,"functions"]],"Future Expansion":[[0,"future-expansion"]],"Getting Started":[[32,"getting-started"]],"Getting Started with Type Forge":[[31,null]],"Installation":[[31,"installation"]],"Key Components":[[1,"key-components"]],"Key Features":[[0,"key-features"]],"Module Contents":[[4,"module-contents"],[5,"module-contents"],[8,"module-contents"],[10,"module-contents"],[11,"module-contents"],[12,"module-contents"],[13,"module-contents"],[14,"module-contents"],[16,"module-contents"],[17,"module-contents"],[18,"module-contents"],[19,"module-contents"],[20,"module-contents"],[21,"module-contents"],[22,"module-contents"],[24,"module-contents"],[25,"module-contents"],[26,"module-contents"],[27,"module-contents"]],"Notes":[[6,null],[7,null],[15,null]],"Overview":[[0,"overview"],[1,"overview"],[32,"overview"]],"Overview of Validators":[[2,"overview-of-validators"]],"Package Contents":[[6,"package-contents"],[7,"package-contents"],[9,"package-contents"],[15,"package-contents"],[28,"package-contents"]],"Prerequisites":[[31,"prerequisites"]],"Submodules":[[6,"submodules"],[7,"submodules"],[9,"submodules"],[15,"submodules"],[23,"submodules"],[28,"submodules"]],"Support":[[31,"support"]],"Table of Contents":[[32,"table-of-contents"]],"Usage":[[0,"usage"],[31,"usage"]],"Usage of the Custom Validator":[[30,"usage-of-the-custom-validator"]],"type_forge":[[9,null]],"type_forge.core":[[6,null]],"type_forge.core.base":[[4,null]],"type_forge.core.exceptions":[[5,null]],"type_forge.forge":[[7,null]],"type_forge.forge.type_forge":[[8,null]],"type_forge.typing":[[15,null]],"type_forge.typing.aliases":[[10,null]],"type_forge.typing.analysis":[[11,null]],"type_forge.typing.conversion":[[12,null]],"type_forge.typing.definitions":[[13,null]],"type_forge.typing.hints":[[14,null]],"type_forge.typing.mapping":[[16,null]],"type_forge.typing.naming":[[17,null]],"type_forge.typing.protocols":[[18,null]],"type_forge.typing.standardization":[[19,null]],"type_forge.typing.validation":[[20,null]],"type_forge.typing.variables":[[21,null]],"type_forge.utils":[[23,null]],"type_forge.utils.collection_manipulation":[[22,null]],"type_forge.utils.string_format":[[24,null]],"type_forge.validators":[[28,null]],"type_forge.validators.basic":[[25,null]],"type_forge.validators.composite":[[26,null]],"type_forge.validators.factory":[[27,null]]},"docnames":["api/forge","api/index","api/validators","autoapi/index","autoapi/type_forge/core/base/index","autoapi/type_forge/core/exceptions/index","autoapi/type_forge/core/index","autoapi/type_forge/forge/index","autoapi/type_forge/forge/type_forge/index","autoapi/type_forge/index","autoapi/type_forge/typing/aliases/index","autoapi/type_forge/typing/analysis/index","autoapi/type_forge/typing/conversion/index","autoapi/type_forge/typing/definitions/index","autoapi/type_forge/typing/hints/index","autoapi/type_forge/typing/index","autoapi/type_forge/typing/mapping/index","autoapi/type_forge/typing/naming/index","autoapi/type_forge/typing/protocols/index","autoapi/type_forge/typing/standardization/index","autoapi/type_forge/typing/validation/index","autoapi/type_forge/typing/variables/index","autoapi/type_forge/utils/collection_manipulation/index","autoapi/type_forge/utils/index","autoapi/type_forge/utils/string_format/index","autoapi/type_forge/validators/basic/index","autoapi/type_forge/validators/composite/index","autoapi/type_forge/validators/factory/index","autoapi/type_forge/validators/index","examples/basic_usage","examples/custom_validators","getting_started","index"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx.ext.todo":2,"sphinx.ext.viewcode":1},"filenames":["api/forge.md","api/index.md","api/validators.md","autoapi/index.rst","autoapi/type_forge/core/base/index.rst","autoapi/type_forge/core/exceptions/index.rst","autoapi/type_forge/core/index.rst","autoapi/type_forge/forge/index.rst","autoapi/type_forge/forge/type_forge/index.rst","autoapi/type_forge/index.rst","autoapi/type_forge/typing/aliases/index.rst","autoapi/type_forge/typing/analysis/index.rst","autoapi/type_forge/typing/conversion/index.rst","autoapi/type_forge/typing/definitions/index.rst","autoapi/type_forge/typing/hints/index.rst","autoapi/type_forge/typing/index.rst","autoapi/type_forge/typing/mapping/index.rst","autoapi/type_forge/typing/naming/index.rst","autoapi/type_forge/typing/protocols/index.rst","autoapi/type_forge/typing/standardization/index.rst","autoapi/type_forge/typing/validation/index.rst","autoapi/type_forge/typing/variables/index.rst","autoapi/type_forge/utils/collection_manipulation/index.rst","autoapi/type_forge/utils/index.rst","autoapi/type_forge/utils/string_format/index.rst","autoapi/type_forge/validators/basic/index.rst","autoapi/type_forge/validators/composite/index.rst","autoapi/type_forge/validators/factory/index.rst","autoapi/type_forge/validators/index.rst","examples/basic_usage.md","examples/custom_validators.md","getting_started.md","index.md"],"indexentries":{"__author__ (in module type_forge.forge)":[[7,"type_forge.forge.__author__",false]],"__author__ (in module type_forge.forge.type_forge)":[[8,"type_forge.forge.type_forge.__author__",false]],"__bool__() (type_forge.core.base.validationresult method)":[[4,"type_forge.core.base.ValidationResult.__bool__",false]],"__bool__() (type_forge.core.validationresult method)":[[6,"type_forge.core.ValidationResult.__bool__",false]],"__bool__() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.__bool__",false]],"__bool__() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.__bool__",false]],"__bool__() (type_forge.typing.protocols.supportsboolconversion method)":[[18,"type_forge.typing.protocols.SupportsBoolConversion.__bool__",false]],"__bool__() (type_forge.typing.supportsboolconversion method)":[[15,"type_forge.typing.SupportsBoolConversion.__bool__",false]],"__bool__() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.__bool__",false]],"__bool__() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.__bool__",false]],"__bool__() (type_forge.validationresult method)":[[9,"type_forge.ValidationResult.__bool__",false]],"__bool__() (type_forge.validators.supportsboolconversion method)":[[28,"type_forge.validators.SupportsBoolConversion.__bool__",false]],"__bool__() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.__bool__",false]],"__bool__() (type_forge.validators.validationresult method)":[[28,"id90",false],[28,"id97",false],[28,"type_forge.validators.ValidationResult.__bool__",false]],"__call__() (type_forge.validators.composite.compositevalidator method)":[[26,"type_forge.validators.composite.CompositeValidator.__call__",false]],"__call__() (type_forge.validators.compositevalidator method)":[[28,"id17",false],[28,"type_forge.validators.CompositeValidator.__call__",false]],"__contains__() (type_forge.typing.protocols.supportsmapping method)":[[18,"type_forge.typing.protocols.SupportsMapping.__contains__",false]],"__contains__() (type_forge.typing.supportsmapping method)":[[15,"type_forge.typing.SupportsMapping.__contains__",false]],"__eq__() (type_forge.typing.protocols.supportsequality method)":[[18,"type_forge.typing.protocols.SupportsEquality.__eq__",false]],"__eq__() (type_forge.typing.supportsequality method)":[[15,"type_forge.typing.SupportsEquality.__eq__",false]],"__float__() (type_forge.typing.protocols.supportsfloat method)":[[18,"type_forge.typing.protocols.SupportsFloat.__float__",false]],"__float__() (type_forge.typing.protocols.supportsfloatconversion method)":[[18,"type_forge.typing.protocols.SupportsFloatConversion.__float__",false]],"__float__() (type_forge.typing.supportsfloat method)":[[15,"type_forge.typing.SupportsFloat.__float__",false]],"__float__() (type_forge.typing.supportsfloatconversion method)":[[15,"type_forge.typing.SupportsFloatConversion.__float__",false]],"__float__() (type_forge.validators.supportsfloat method)":[[28,"type_forge.validators.SupportsFloat.__float__",false]],"__float__() (type_forge.validators.supportsfloatconversion method)":[[28,"type_forge.validators.SupportsFloatConversion.__float__",false]],"__getattr__() (type_forge.typing.protocols.supportsgetattr method)":[[18,"type_forge.typing.protocols.SupportsGetAttr.__getattr__",false]],"__getattr__() (type_forge.typing.supportsgetattr method)":[[15,"type_forge.typing.SupportsGetAttr.__getattr__",false]],"__getitem__() (type_forge.typing.protocols.supportsgetitem method)":[[18,"type_forge.typing.protocols.SupportsGetItem.__getitem__",false]],"__getitem__() (type_forge.typing.protocols.supportsmapping method)":[[18,"type_forge.typing.protocols.SupportsMapping.__getitem__",false]],"__getitem__() (type_forge.typing.supportsgetitem method)":[[15,"type_forge.typing.SupportsGetItem.__getitem__",false]],"__getitem__() (type_forge.typing.supportsmapping method)":[[15,"type_forge.typing.SupportsMapping.__getitem__",false]],"__int__() (type_forge.typing.protocols.supportsint method)":[[18,"type_forge.typing.protocols.SupportsInt.__int__",false]],"__int__() (type_forge.typing.protocols.supportsintconversion method)":[[18,"type_forge.typing.protocols.SupportsIntConversion.__int__",false]],"__int__() (type_forge.typing.supportsint method)":[[15,"type_forge.typing.SupportsInt.__int__",false]],"__int__() (type_forge.typing.supportsintconversion method)":[[15,"type_forge.typing.SupportsIntConversion.__int__",false]],"__int__() (type_forge.validators.supportsint method)":[[28,"type_forge.validators.SupportsInt.__int__",false]],"__int__() (type_forge.validators.supportsintconversion method)":[[28,"type_forge.validators.SupportsIntConversion.__int__",false]],"__iter__() (type_forge.typing.protocols.supportsiteration method)":[[18,"type_forge.typing.protocols.SupportsIteration.__iter__",false]],"__iter__() (type_forge.typing.supportsiteration method)":[[15,"type_forge.typing.SupportsIteration.__iter__",false]],"__len__() (type_forge.typing.protocols.supportslen method)":[[18,"type_forge.typing.protocols.SupportsLen.__len__",false]],"__len__() (type_forge.typing.protocols.supportslength method)":[[18,"type_forge.typing.protocols.SupportsLength.__len__",false]],"__len__() (type_forge.typing.supportslen method)":[[15,"type_forge.typing.SupportsLen.__len__",false]],"__len__() (type_forge.typing.supportslength method)":[[15,"type_forge.typing.SupportsLength.__len__",false]],"__lt__() (type_forge.typing.protocols.supportscomparison method)":[[18,"type_forge.typing.protocols.SupportsComparison.__lt__",false]],"__lt__() (type_forge.typing.supportscomparison method)":[[15,"type_forge.typing.SupportsComparison.__lt__",false]],"__module__ (type_forge.typing.naming.typeprotocol attribute)":[[17,"type_forge.typing.naming.TypeProtocol.__module__",false]],"__name__ (type_forge.typing.naming.typeprotocol attribute)":[[17,"type_forge.typing.naming.TypeProtocol.__name__",false]],"__ne__() (type_forge.typing.protocols.supportsequality method)":[[18,"type_forge.typing.protocols.SupportsEquality.__ne__",false]],"__ne__() (type_forge.typing.supportsequality method)":[[15,"type_forge.typing.SupportsEquality.__ne__",false]],"__qualname__ (type_forge.typing.naming.typeprotocol attribute)":[[17,"type_forge.typing.naming.TypeProtocol.__qualname__",false]],"__repr__() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.__repr__",false]],"__repr__() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.__repr__",false]],"__setitem__() (type_forge.typing.protocols.supportsmapping method)":[[18,"type_forge.typing.protocols.SupportsMapping.__setitem__",false]],"__setitem__() (type_forge.typing.supportsmapping method)":[[15,"type_forge.typing.SupportsMapping.__setitem__",false]],"__str__() (type_forge.core.exceptions.typeviolation method)":[[5,"type_forge.core.exceptions.TypeViolation.__str__",false]],"__str__() (type_forge.core.exceptions.typeviolationkind method)":[[5,"type_forge.core.exceptions.TypeViolationKind.__str__",false]],"__str__() (type_forge.core.typeviolation method)":[[6,"type_forge.core.TypeViolation.__str__",false]],"__str__() (type_forge.core.typeviolationkind method)":[[6,"type_forge.core.TypeViolationKind.__str__",false]],"__str__() (type_forge.typeviolation method)":[[9,"type_forge.TypeViolation.__str__",false]],"__str__() (type_forge.typeviolationkind method)":[[9,"type_forge.TypeViolationKind.__str__",false]],"__str__() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.__str__",false]],"__str__() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.__str__",false]],"__str__() (type_forge.typing.definitions.typecategory method)":[[13,"type_forge.typing.definitions.TypeCategory.__str__",false]],"__str__() (type_forge.typing.definitions.typecompatibility method)":[[13,"type_forge.typing.definitions.TypeCompatibility.__str__",false]],"__str__() (type_forge.typing.definitions.validationlevel method)":[[13,"type_forge.typing.definitions.ValidationLevel.__str__",false]],"__str__() (type_forge.typing.definitions.validationseverity method)":[[13,"type_forge.typing.definitions.ValidationSeverity.__str__",false]],"__str__() (type_forge.typing.protocols.supportsstrconversion method)":[[18,"type_forge.typing.protocols.SupportsStrConversion.__str__",false]],"__str__() (type_forge.typing.supportsstrconversion method)":[[15,"type_forge.typing.SupportsStrConversion.__str__",false]],"__str__() (type_forge.typing.validation.validationissue method)":[[20,"type_forge.typing.validation.ValidationIssue.__str__",false]],"__str__() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.__str__",false]],"__str__() (type_forge.typing.validationissue method)":[[15,"type_forge.typing.ValidationIssue.__str__",false]],"__str__() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.__str__",false]],"__str__() (type_forge.validators.typeviolation method)":[[28,"id35",false],[28,"id46",false],[28,"type_forge.validators.TypeViolation.__str__",false]],"__str__() (type_forge.validators.typeviolationkind method)":[[28,"id68",false],[28,"id83",false],[28,"type_forge.validators.TypeViolationKind.__str__",false]],"__str__() (type_forge.validators.validationissue method)":[[28,"type_forge.validators.ValidationIssue.__str__",false]],"__str__() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.__str__",false]],"__version__ (in module type_forge.forge)":[[7,"type_forge.forge.__version__",false]],"__version__ (in module type_forge.forge.type_forge)":[[8,"type_forge.forge.type_forge.__version__",false]],"_get_type_name() (type_forge.validators.factory.validatorfactory static method)":[[27,"type_forge.validators.factory.ValidatorFactory._get_type_name",false]],"_get_type_name() (type_forge.validators.validatorfactory static method)":[[28,"type_forge.validators.ValidatorFactory._get_type_name",false]],"_none_type (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming._NONE_TYPE",false]],"_try_convert() (type_forge.validators.factory.validatorfactory static method)":[[27,"type_forge.validators.factory.ValidatorFactory._try_convert",false]],"_try_convert() (type_forge.validators.validatorfactory static method)":[[28,"type_forge.validators.ValidatorFactory._try_convert",false]],"_type_converters (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion._TYPE_CONVERTERS",false]],"add_error() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.add_error",false]],"add_error() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.add_error",false]],"add_error() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.add_error",false]],"add_info() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.add_info",false]],"add_info() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.add_info",false]],"add_info() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.add_info",false]],"add_issue() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.add_issue",false]],"add_issue() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.add_issue",false]],"add_issue() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.add_issue",false]],"add_validator() (type_forge.core.base.typeforgebase method)":[[4,"type_forge.core.base.TypeForgeBase.add_validator",false]],"add_validator() (type_forge.core.typeforgebase method)":[[6,"type_forge.core.TypeForgeBase.add_validator",false]],"add_validator() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.add_validator",false]],"add_validator() (type_forge.typing.compositevalidator method)":[[15,"type_forge.typing.CompositeValidator.add_validator",false]],"add_validator() (type_forge.typing.protocols.compositevalidator method)":[[18,"type_forge.typing.protocols.CompositeValidator.add_validator",false]],"add_validator() (type_forge.validators.composite.compositevalidator method)":[[26,"type_forge.validators.composite.CompositeValidator.add_validator",false]],"add_validator() (type_forge.validators.compositevalidator method)":[[28,"id18",false],[28,"type_forge.validators.CompositeValidator.add_validator",false]],"add_warning() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.add_warning",false]],"add_warning() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.add_warning",false]],"add_warning() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.add_warning",false]],"are_types_compatible() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.are_types_compatible",false]],"are_types_compatible() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.are_types_compatible",false]],"are_types_compatible() (in module type_forge.validators)":[[28,"type_forge.validators.are_types_compatible",false]],"assert_type (in module type_forge.forge)":[[7,"type_forge.forge.assert_type",false]],"assert_type() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.assert_type",false]],"atomic (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.ATOMIC",false]],"basevalidator (class in type_forge.core)":[[6,"type_forge.core.BaseValidator",false]],"basevalidator (class in type_forge.core.base)":[[4,"type_forge.core.base.BaseValidator",false]],"basevalidator (class in type_forge.validators)":[[28,"id0",false],[28,"type_forge.validators.BaseValidator",false]],"basicvalidator (class in type_forge.validators)":[[28,"id3",false],[28,"type_forge.validators.BasicValidator",false]],"basicvalidator (class in type_forge.validators.basic)":[[25,"type_forge.validators.basic.BasicValidator",false]],"binary (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.BINARY",false]],"boolean (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.BOOLEAN",false]],"callable_category (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.CALLABLE_CATEGORY",false]],"camel_to_snake() (in module type_forge.utils.string_format)":[[24,"type_forge.utils.string_format.camel_to_snake",false]],"can_proceed() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.can_proceed",false]],"can_proceed() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.can_proceed",false]],"can_proceed() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.can_proceed",false]],"check_type (in module type_forge.forge)":[[7,"type_forge.forge.check_type",false]],"check_type() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.check_type",false]],"classtype (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ClassType",false]],"classtype_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ClassType_co",false]],"classtype_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ClassType_contra",false]],"coerce_to_type() (in module type_forge.typing)":[[15,"type_forge.typing.coerce_to_type",false]],"coerce_to_type() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.coerce_to_type",false]],"collectiont (in module type_forge.typing)":[[15,"type_forge.typing.CollectionT",false]],"collectiont (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.CollectionT",false]],"collectiontypes (in module type_forge.typing)":[[15,"type_forge.typing.CollectionTypes",false]],"collectiontypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.CollectionTypes",false]],"comparablet (in module type_forge.typing)":[[15,"type_forge.typing.ComparableT",false]],"comparablet (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.ComparableT",false]],"comparablet_co (in module type_forge.typing)":[[15,"type_forge.typing.ComparableT_co",false]],"comparablet_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.ComparableT_co",false]],"comparablet_contra (in module type_forge.typing)":[[15,"type_forge.typing.ComparableT_contra",false]],"comparablet_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.ComparableT_contra",false]],"composite (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.COMPOSITE",false]],"composite_category (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.COMPOSITE_CATEGORY",false]],"compositevalidator (class in type_forge.typing)":[[15,"type_forge.typing.CompositeValidator",false]],"compositevalidator (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.CompositeValidator",false]],"compositevalidator (class in type_forge.validators)":[[28,"id16",false],[28,"type_forge.validators.CompositeValidator",false]],"compositevalidator (class in type_forge.validators.composite)":[[26,"type_forge.validators.composite.CompositeValidator",false]],"configurationerror":[[5,"type_forge.core.exceptions.ConfigurationError",false],[6,"type_forge.core.ConfigurationError",false]],"container (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.CONTAINER",false]],"container_category (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.CONTAINER_CATEGORY",false]],"container_compatible (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.CONTAINER_COMPATIBLE",false]],"context (type_forge.typing.validation.validationissue attribute)":[[20,"type_forge.typing.validation.ValidationIssue.context",false]],"context (type_forge.typing.validationissue attribute)":[[15,"type_forge.typing.ValidationIssue.context",false]],"context (type_forge.validators.validationissue attribute)":[[28,"type_forge.validators.ValidationIssue.context",false]],"contravariant (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.CONTRAVARIANT",false]],"conversion_error (type_forge.core.exceptions.typeviolationkind attribute)":[[5,"type_forge.core.exceptions.TypeViolationKind.CONVERSION_ERROR",false]],"conversion_error (type_forge.core.typeviolationkind attribute)":[[6,"type_forge.core.TypeViolationKind.CONVERSION_ERROR",false]],"conversion_error (type_forge.typeviolationkind attribute)":[[9,"type_forge.TypeViolationKind.CONVERSION_ERROR",false]],"conversion_error (type_forge.validators.typeviolationkind attribute)":[[28,"id69",false],[28,"id84",false],[28,"type_forge.validators.TypeViolationKind.CONVERSION_ERROR",false]],"conversionresult (class in type_forge.typing)":[[15,"type_forge.typing.ConversionResult",false]],"conversionresult (class in type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.ConversionResult",false]],"convert() (type_forge.typing.protocols.typeconverter method)":[[18,"type_forge.typing.protocols.TypeConverter.convert",false]],"convert() (type_forge.typing.protocols.typedconverter method)":[[18,"type_forge.typing.protocols.TypedConverter.convert",false]],"convert() (type_forge.typing.typeconverterprotocol method)":[[15,"type_forge.typing.TypeConverterProtocol.convert",false]],"convert() (type_forge.typing.typedconverter method)":[[15,"type_forge.typing.TypedConverter.convert",false]],"convert_value (in module type_forge.forge)":[[7,"type_forge.forge.convert_value",false]],"convert_value() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.convert_value",false]],"convert_with_fallback() (in module type_forge.typing)":[[15,"type_forge.typing.convert_with_fallback",false]],"convert_with_fallback() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.convert_with_fallback",false]],"converted_value (type_forge.core.base.validationresult attribute)":[[4,"type_forge.core.base.ValidationResult.converted_value",false]],"converted_value (type_forge.core.validationresult attribute)":[[6,"type_forge.core.ValidationResult.converted_value",false]],"converted_value (type_forge.validationresult attribute)":[[9,"type_forge.ValidationResult.converted_value",false]],"converted_value (type_forge.validators.validationresult attribute)":[[28,"id100",false],[28,"id93",false],[28,"type_forge.validators.ValidationResult.converted_value",false]],"convertermap (in module type_forge.typing)":[[15,"type_forge.typing.ConverterMap",false]],"convertermap (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ConverterMap",false]],"convertermapgeneric (in module type_forge.typing)":[[15,"type_forge.typing.ConverterMapGeneric",false]],"convertermapgeneric (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ConverterMapGeneric",false]],"convertermapsr (in module type_forge.typing)":[[15,"type_forge.typing.ConverterMapSR",false]],"convertermapsr (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ConverterMapSR",false]],"converterpriority (in module type_forge.typing)":[[15,"type_forge.typing.ConverterPriority",false]],"converterpriority (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ConverterPriority",false]],"convertible (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.CONVERTIBLE",false]],"convertibletobool (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.ConvertibleToBool",false]],"convertibletofloat (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.ConvertibleToFloat",false]],"convertibletoint (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.ConvertibleToInt",false]],"convertibletostr (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.ConvertibleToStr",false]],"covariant (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.COVARIANT",false]],"create() (type_forge.typing.protocols.typefactory method)":[[18,"type_forge.typing.protocols.TypeFactory.create",false]],"create() (type_forge.typing.typefactory method)":[[15,"type_forge.typing.TypeFactory.create",false]],"create_instance() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.create_instance",false]],"create_success() (type_forge.typing.conversion.conversionresult class method)":[[12,"type_forge.typing.conversion.ConversionResult.create_success",false]],"create_success() (type_forge.typing.conversionresult class method)":[[15,"type_forge.typing.ConversionResult.create_success",false]],"create_type (in module type_forge.forge)":[[7,"type_forge.forge.create_type",false]],"create_type() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.create_type",false]],"create_validator() (type_forge.validators.factory.validatorfactory static method)":[[27,"type_forge.validators.factory.ValidatorFactory.create_validator",false]],"create_validator() (type_forge.validators.validatorfactory static method)":[[28,"type_forge.validators.ValidatorFactory.create_validator",false]],"datetime (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.DATETIME",false]],"debug (type_forge.typing.definitions.validationseverity attribute)":[[13,"type_forge.typing.definitions.ValidationSeverity.DEBUG",false]],"deduplicate() (type_forge.typing.protocols.typededuplicator method)":[[18,"type_forge.typing.protocols.TypeDeduplicator.deduplicate",false]],"deduplicate() (type_forge.typing.typededuplicator method)":[[15,"type_forge.typing.TypeDeduplicator.deduplicate",false]],"deduplicate_list() (in module type_forge.utils.collection_manipulation)":[[22,"type_forge.utils.collection_manipulation.deduplicate_list",false]],"deduplicate_types() (in module type_forge.typing)":[[15,"type_forge.typing.deduplicate_types",false]],"deduplicate_types() (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.deduplicate_types",false]],"describe_type() (in module type_forge.typing)":[[15,"type_forge.typing.describe_type",false]],"describe_type() (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.describe_type",false]],"describe_type() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.describe_type",false]],"dictkv (in module type_forge.typing)":[[15,"type_forge.typing.DictKV",false]],"dictkv (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.DictKV",false]],"dictkv_co (in module type_forge.typing)":[[15,"type_forge.typing.DictKV_co",false]],"dictkv_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.DictKV_co",false]],"dictschemat (in module type_forge.typing)":[[15,"type_forge.typing.DictSchemaT",false]],"dictschemat (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.DictSchemaT",false]],"dictschemat (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.DictSchemaT",false]],"dictschemat (in module type_forge.validators)":[[28,"type_forge.validators.DictSchemaT",false]],"dictschemat_co (in module type_forge.typing)":[[15,"type_forge.typing.DictSchemaT_co",false]],"dictschemat_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.DictSchemaT_co",false]],"dictschemat_contra (in module type_forge.typing)":[[15,"type_forge.typing.DictSchemaT_contra",false]],"dictschemat_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.DictSchemaT_contra",false]],"dynamic (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.DYNAMIC",false]],"enum (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.ENUM",false]],"error (type_forge.typing.conversion.conversionresult attribute)":[[12,"type_forge.typing.conversion.ConversionResult.error",false]],"error (type_forge.typing.conversionresult attribute)":[[15,"type_forge.typing.ConversionResult.error",false]],"error (type_forge.typing.definitions.validationseverity attribute)":[[13,"type_forge.typing.definitions.ValidationSeverity.ERROR",false]],"errorhandler (in module type_forge.typing)":[[15,"type_forge.typing.ErrorHandler",false]],"errorhandler (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ErrorHandler",false]],"errormessage (in module type_forge.typing)":[[15,"type_forge.typing.ErrorMessage",false]],"errormessage (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ErrorMessage",false]],"expected (type_forge.core.exceptions.typeviolation attribute)":[[5,"type_forge.core.exceptions.TypeViolation.expected",false]],"expected (type_forge.core.typeviolation attribute)":[[6,"type_forge.core.TypeViolation.expected",false]],"expected (type_forge.typeviolation attribute)":[[9,"type_forge.TypeViolation.expected",false]],"expected (type_forge.validators.typeviolation attribute)":[[28,"id36",false],[28,"id47",false],[28,"type_forge.validators.TypeViolation.expected",false]],"failure() (type_forge.typing.conversion.conversionresult class method)":[[12,"type_forge.typing.conversion.ConversionResult.failure",false]],"failure() (type_forge.typing.conversionresult class method)":[[15,"type_forge.typing.ConversionResult.failure",false]],"fallbackprovider (in module type_forge.typing)":[[15,"type_forge.typing.FallbackProvider",false]],"fallbackprovider (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FallbackProvider",false]],"fatal (type_forge.typing.definitions.validationseverity attribute)":[[13,"type_forge.typing.definitions.ValidationSeverity.FATAL",false]],"fielddefinitions (in module type_forge.typing)":[[15,"type_forge.typing.FieldDefinitions",false]],"fielddefinitions (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FieldDefinitions",false]],"fielddefinitionst (in module type_forge.typing)":[[15,"type_forge.typing.FieldDefinitionsT",false]],"fielddefinitionst (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FieldDefinitionsT",false]],"fielddefinitionst_co (in module type_forge.typing)":[[15,"type_forge.typing.FieldDefinitionsT_co",false]],"fielddefinitionst_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FieldDefinitionsT_co",false]],"fielddefinitionst_contra (in module type_forge.typing)":[[15,"type_forge.typing.FieldDefinitionsT_contra",false]],"fielddefinitionst_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FieldDefinitionsT_contra",false]],"fieldswithdefaults (in module type_forge.typing)":[[15,"type_forge.typing.FieldsWithDefaults",false]],"fieldswithdefaults (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FieldsWithDefaults",false]],"fieldswithdefaultst (in module type_forge.typing)":[[15,"type_forge.typing.FieldsWithDefaultsT",false]],"fieldswithdefaultst (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FieldsWithDefaultsT",false]],"filter_dict() (in module type_forge.utils.collection_manipulation)":[[22,"type_forge.utils.collection_manipulation.filter_dict",false]],"find_common_supertype() (type_forge.typing.analysis.typerelationshipanalyzer method)":[[11,"type_forge.typing.analysis.TypeRelationshipAnalyzer.find_common_supertype",false]],"find_common_supertype() (type_forge.typing.typerelationshipanalyzer method)":[[15,"type_forge.typing.TypeRelationshipAnalyzer.find_common_supertype",false]],"flatten_list() (in module type_forge.utils.collection_manipulation)":[[22,"type_forge.utils.collection_manipulation.flatten_list",false]],"forge() (type_forge.typing.protocols.typeforge method)":[[18,"type_forge.typing.protocols.TypeForge.forge",false]],"forge() (type_forge.typing.typeforge method)":[[15,"type_forge.typing.TypeForge.forge",false]],"format_message() (in module type_forge.utils.string_format)":[[24,"type_forge.utils.string_format.format_message",false]],"format_type_annotation() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.format_type_annotation",false]],"format_type_name() (in module type_forge.utils.string_format)":[[24,"type_forge.utils.string_format.format_type_name",false]],"found (type_forge.core.exceptions.typeviolation attribute)":[[5,"type_forge.core.exceptions.TypeViolation.found",false]],"found (type_forge.core.typeviolation attribute)":[[6,"type_forge.core.TypeViolation.found",false]],"found (type_forge.typeviolation attribute)":[[9,"type_forge.TypeViolation.found",false]],"found (type_forge.validators.typeviolation attribute)":[[28,"id37",false],[28,"id48",false],[28,"type_forge.validators.TypeViolation.found",false]],"from_try() (type_forge.typing.conversion.conversionresult class method)":[[12,"type_forge.typing.conversion.ConversionResult.from_try",false]],"from_try() (type_forge.typing.conversionresult class method)":[[15,"type_forge.typing.ConversionResult.from_try",false]],"from_validators() (type_forge.validators.composite.compositevalidator static method)":[[26,"type_forge.validators.composite.CompositeValidator.from_validators",false]],"from_validators() (type_forge.validators.compositevalidator static method)":[[28,"id19",false],[28,"type_forge.validators.CompositeValidator.from_validators",false]],"frozensett (in module type_forge.typing)":[[15,"type_forge.typing.FrozenSetT",false]],"frozensett (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FrozenSetT",false]],"frozensett_co (in module type_forge.typing)":[[15,"type_forge.typing.FrozenSetT_co",false]],"frozensett_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.FrozenSetT_co",false]],"function (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.FUNCTION",false]],"generic (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.GENERIC",false]],"get_attributes() (type_forge.typing.protocols.typeinfo method)":[[18,"type_forge.typing.protocols.TypeInfo.get_attributes",false]],"get_attributes() (type_forge.typing.typeinfo method)":[[15,"type_forge.typing.TypeInfo.get_attributes",false]],"get_common_supertype() (in module type_forge.typing)":[[15,"type_forge.typing.get_common_supertype",false]],"get_common_supertype() (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.get_common_supertype",false]],"get_common_supertype() (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.get_common_supertype",false]],"get_conversion_distance() (type_forge.typing.analysis.typerelationshipanalyzer method)":[[11,"type_forge.typing.analysis.TypeRelationshipAnalyzer.get_conversion_distance",false]],"get_conversion_distance() (type_forge.typing.typerelationshipanalyzer method)":[[15,"type_forge.typing.TypeRelationshipAnalyzer.get_conversion_distance",false]],"get_errors() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.get_errors",false]],"get_errors() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.get_errors",false]],"get_errors() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.get_errors",false]],"get_fully_qualified_name() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.get_fully_qualified_name",false]],"get_generic_args() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.get_generic_args",false]],"get_issues() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.get_issues",false]],"get_issues() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.get_issues",false]],"get_issues() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.get_issues",false]],"get_name() (type_forge.typing.protocols.typeinfo method)":[[18,"type_forge.typing.protocols.TypeInfo.get_name",false]],"get_name() (type_forge.typing.typeinfo method)":[[15,"type_forge.typing.TypeInfo.get_name",false]],"get_python_type_for_name() (in module type_forge.typing)":[[15,"type_forge.typing.get_python_type_for_name",false]],"get_python_type_for_name() (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.get_python_type_for_name",false]],"get_relationship() (type_forge.typing.analysis.typerelationshipanalyzer method)":[[11,"type_forge.typing.analysis.TypeRelationshipAnalyzer.get_relationship",false]],"get_relationship() (type_forge.typing.typerelationshipanalyzer method)":[[15,"type_forge.typing.TypeRelationshipAnalyzer.get_relationship",false]],"get_standardized_type_name() (in module type_forge.typing)":[[15,"type_forge.typing.get_standardized_type_name",false]],"get_type_category() (in module type_forge.typing)":[[15,"type_forge.typing.get_type_category",false]],"get_type_category() (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.get_type_category",false]],"get_type_category() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.get_type_category",false]],"get_type_hierarchy() (in module type_forge.typing)":[[15,"type_forge.typing.get_type_hierarchy",false]],"get_type_hierarchy() (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.get_type_hierarchy",false]],"get_type_name() (in module type_forge.typing)":[[15,"type_forge.typing.get_type_name",false]],"get_type_name() (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.get_type_name",false]],"get_type_name() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.get_type_name",false]],"get_warnings() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.get_warnings",false]],"get_warnings() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.get_warnings",false]],"get_warnings() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.get_warnings",false]],"group_by_key() (in module type_forge.utils.collection_manipulation)":[[22,"type_forge.utils.collection_manipulation.group_by_key",false]],"has_attributes() (in module type_forge.typing)":[[15,"type_forge.typing.has_attributes",false]],"has_attributes() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.has_attributes",false]],"has_attributes() (in module type_forge.validators)":[[28,"type_forge.validators.has_attributes",false]],"has_warnings() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.has_warnings",false]],"has_warnings() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.has_warnings",false]],"has_warnings() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.has_warnings",false]],"hashablet (in module type_forge.typing)":[[15,"type_forge.typing.HashableT",false]],"hashablet (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.HashableT",false]],"hashablet_co (in module type_forge.typing)":[[15,"type_forge.typing.HashableT_co",false]],"hashablet_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.HashableT_co",false]],"hashablet_contra (in module type_forge.typing)":[[15,"type_forge.typing.HashableT_contra",false]],"hashablet_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.HashableT_contra",false]],"identical (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.IDENTICAL",false]],"identitytypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.IdentityTypes",false]],"implicit_convertible (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.IMPLICIT_CONVERTIBLE",false]],"incompatible (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.INCOMPATIBLE",false]],"info (type_forge.typing.definitions.validationseverity attribute)":[[13,"type_forge.typing.definitions.ValidationSeverity.INFO",false]],"invalid_value (type_forge.core.exceptions.typeviolationkind attribute)":[[5,"type_forge.core.exceptions.TypeViolationKind.INVALID_VALUE",false]],"invalid_value (type_forge.core.typeviolationkind attribute)":[[6,"type_forge.core.TypeViolationKind.INVALID_VALUE",false]],"invalid_value (type_forge.typeviolationkind attribute)":[[9,"type_forge.TypeViolationKind.INVALID_VALUE",false]],"invalid_value (type_forge.validators.typeviolationkind attribute)":[[28,"id70",false],[28,"id85",false],[28,"type_forge.validators.TypeViolationKind.INVALID_VALUE",false]],"is_abstract_type() (in module type_forge.typing)":[[15,"type_forge.typing.is_abstract_type",false]],"is_abstract_type() (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.is_abstract_type",false]],"is_blocker() (type_forge.typing.definitions.validationseverity method)":[[13,"type_forge.typing.definitions.ValidationSeverity.is_blocker",false]],"is_blocker() (type_forge.typing.validation.validationissue method)":[[20,"type_forge.typing.validation.ValidationIssue.is_blocker",false]],"is_blocker() (type_forge.typing.validationissue method)":[[15,"type_forge.typing.ValidationIssue.is_blocker",false]],"is_blocker() (type_forge.validators.validationissue method)":[[28,"type_forge.validators.ValidationIssue.is_blocker",false]],"is_callable() (in module type_forge.typing)":[[15,"type_forge.typing.is_callable",false]],"is_callable() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_callable",false]],"is_callable() (in module type_forge.validators)":[[28,"type_forge.validators.is_callable",false]],"is_collection() (in module type_forge.typing)":[[15,"type_forge.typing.is_collection",false]],"is_collection() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_collection",false]],"is_collection() (in module type_forge.validators)":[[28,"type_forge.validators.is_collection",false]],"is_compatible() (type_forge.typing.definitions.typecompatibility method)":[[13,"type_forge.typing.definitions.TypeCompatibility.is_compatible",false]],"is_compatible_with_type() (in module type_forge.typing)":[[15,"type_forge.typing.is_compatible_with_type",false]],"is_compatible_with_type() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_compatible_with_type",false]],"is_compatible_with_type() (in module type_forge.validators)":[[28,"type_forge.validators.is_compatible_with_type",false]],"is_container_type() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.is_container_type",false]],"is_convertible() (type_forge.typing.analysis.typerelationshipanalyzer method)":[[11,"type_forge.typing.analysis.TypeRelationshipAnalyzer.is_convertible",false]],"is_convertible() (type_forge.typing.typerelationshipanalyzer method)":[[15,"type_forge.typing.TypeRelationshipAnalyzer.is_convertible",false]],"is_error() (type_forge.typing.definitions.validationseverity method)":[[13,"type_forge.typing.definitions.ValidationSeverity.is_error",false]],"is_error() (type_forge.typing.validation.validationissue method)":[[20,"type_forge.typing.validation.ValidationIssue.is_error",false]],"is_error() (type_forge.typing.validationissue method)":[[15,"type_forge.typing.ValidationIssue.is_error",false]],"is_error() (type_forge.validators.validationissue method)":[[28,"type_forge.validators.ValidationIssue.is_error",false]],"is_function() (in module type_forge.typing)":[[15,"type_forge.typing.is_function",false]],"is_function() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_function",false]],"is_function() (in module type_forge.validators)":[[28,"type_forge.validators.is_function",false]],"is_generic_type() (in module type_forge.typing)":[[15,"type_forge.typing.is_generic_type",false]],"is_generic_type() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.is_generic_type",false]],"is_generic_type() (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.is_generic_type",false]],"is_in_range() (in module type_forge.validators)":[[28,"type_forge.validators.is_in_range",false]],"is_in_range() (in module type_forge.validators.composite)":[[26,"type_forge.validators.composite.is_in_range",false]],"is_instance() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.is_instance",false]],"is_instance_of_any() (in module type_forge.typing)":[[15,"type_forge.typing.is_instance_of_any",false]],"is_instance_of_any() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_instance_of_any",false]],"is_instance_of_any() (in module type_forge.validators)":[[28,"type_forge.validators.is_instance_of_any",false]],"is_method() (in module type_forge.typing)":[[15,"type_forge.typing.is_method",false]],"is_method() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_method",false]],"is_method() (in module type_forge.validators)":[[28,"type_forge.validators.is_method",false]],"is_non_empty_string() (in module type_forge.typing)":[[15,"type_forge.typing.is_non_empty_string",false]],"is_non_empty_string() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_non_empty_string",false]],"is_non_empty_string() (in module type_forge.validators)":[[28,"type_forge.validators.is_non_empty_string",false]],"is_not_empty() (in module type_forge.validators)":[[28,"type_forge.validators.is_not_empty",false]],"is_not_empty() (in module type_forge.validators.composite)":[[26,"type_forge.validators.composite.is_not_empty",false]],"is_numeric() (in module type_forge.typing)":[[15,"type_forge.typing.is_numeric",false]],"is_numeric() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_numeric",false]],"is_numeric() (in module type_forge.validators)":[[28,"type_forge.validators.is_numeric",false]],"is_optional_type() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.is_optional_type",false]],"is_positive() (in module type_forge.validators)":[[28,"type_forge.validators.is_positive",false]],"is_positive() (in module type_forge.validators.composite)":[[26,"type_forge.validators.composite.is_positive",false]],"is_primitive_type() (in module type_forge.typing)":[[15,"type_forge.typing.is_primitive_type",false]],"is_primitive_type() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.is_primitive_type",false]],"is_protocol_instance() (in module type_forge.typing)":[[15,"type_forge.typing.is_protocol_instance",false]],"is_protocol_instance() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_protocol_instance",false]],"is_protocol_instance() (in module type_forge.validators)":[[28,"type_forge.validators.is_protocol_instance",false]],"is_subclass_safe() (in module type_forge.typing)":[[15,"type_forge.typing.is_subclass_safe",false]],"is_subclass_safe() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_subclass_safe",false]],"is_subclass_safe() (in module type_forge.validators)":[[28,"type_forge.validators.is_subclass_safe",false]],"is_subtype_of() (type_forge.typing.protocols.typeinfo method)":[[18,"type_forge.typing.protocols.TypeInfo.is_subtype_of",false]],"is_subtype_of() (type_forge.typing.typeinfo method)":[[15,"type_forge.typing.TypeInfo.is_subtype_of",false]],"is_type() (type_forge.typing.protocols.supportstypecheck method)":[[18,"type_forge.typing.protocols.SupportsTypeCheck.is_type",false]],"is_type() (type_forge.typing.supportstypecheck method)":[[15,"type_forge.typing.SupportsTypeCheck.is_type",false]],"is_valid() (type_forge.typing.validation.validationreport method)":[[20,"type_forge.typing.validation.ValidationReport.is_valid",false]],"is_valid() (type_forge.typing.validationreport method)":[[15,"type_forge.typing.ValidationReport.is_valid",false]],"is_valid() (type_forge.validators.validationreport method)":[[28,"type_forge.validators.ValidationReport.is_valid",false]],"is_valid_identifier() (in module type_forge.typing)":[[15,"type_forge.typing.is_valid_identifier",false]],"is_valid_identifier() (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.is_valid_identifier",false]],"is_valid_identifier() (in module type_forge.validators)":[[28,"type_forge.validators.is_valid_identifier",false]],"is_valid_length() (in module type_forge.validators)":[[28,"type_forge.validators.is_valid_length",false]],"is_valid_length() (in module type_forge.validators.composite)":[[26,"type_forge.validators.composite.is_valid_length",false]],"issues (type_forge.typing.validation.validationreport attribute)":[[20,"type_forge.typing.validation.ValidationReport.issues",false]],"issues (type_forge.typing.validationreport attribute)":[[15,"type_forge.typing.ValidationReport.issues",false]],"issues (type_forge.validators.validationreport attribute)":[[28,"type_forge.validators.ValidationReport.issues",false]],"iterablet (in module type_forge.typing)":[[15,"type_forge.typing.IterableT",false]],"iterablet (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.IterableT",false]],"iterablet_co (in module type_forge.typing)":[[15,"type_forge.typing.IterableT_co",false]],"iterablet_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.IterableT_co",false]],"iteratort (in module type_forge.typing)":[[15,"type_forge.typing.IteratorT",false]],"iteratort (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.IteratorT",false]],"iteratort_co (in module type_forge.typing)":[[15,"type_forge.typing.IteratorT_co",false]],"iteratort_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.IteratorT_co",false]],"k (in module type_forge.typing)":[[15,"type_forge.typing.K",false]],"k (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.K",false]],"k_co (in module type_forge.typing)":[[15,"type_forge.typing.K_co",false]],"k_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.K_co",false]],"k_contra (in module type_forge.typing)":[[15,"type_forge.typing.K_contra",false]],"k_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.K_contra",false]],"kind (type_forge.core.exceptions.typeviolation attribute)":[[5,"type_forge.core.exceptions.TypeViolation.kind",false]],"kind (type_forge.core.typeviolation attribute)":[[6,"type_forge.core.TypeViolation.kind",false]],"kind (type_forge.typeviolation attribute)":[[9,"type_forge.TypeViolation.kind",false]],"kind (type_forge.validators.typeviolation attribute)":[[28,"id38",false],[28,"id49",false],[28,"type_forge.validators.TypeViolation.kind",false]],"listschemat (in module type_forge.typing)":[[15,"type_forge.typing.ListSchemaT",false]],"listschemat (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.ListSchemaT",false]],"listt (in module type_forge.typing)":[[15,"type_forge.typing.ListT",false]],"listt (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ListT",false]],"listt_co (in module type_forge.typing)":[[15,"type_forge.typing.ListT_co",false]],"listt_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ListT_co",false]],"lookup() (type_forge.typing.protocols.typeregistry method)":[[18,"type_forge.typing.protocols.TypeRegistry.lookup",false]],"lookup() (type_forge.typing.typeregistryprotocol method)":[[15,"type_forge.typing.TypeRegistryProtocol.lookup",false]],"map() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.map",false]],"map() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.map",false]],"mappingtypes (in module type_forge.typing)":[[15,"type_forge.typing.MappingTypes",false]],"mappingtypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.MappingTypes",false]],"maybetype (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.MaybeType",false]],"merge() (type_forge.core.base.validationresult method)":[[4,"type_forge.core.base.ValidationResult.merge",false]],"merge() (type_forge.core.validationresult method)":[[6,"type_forge.core.ValidationResult.merge",false]],"merge() (type_forge.validationresult method)":[[9,"type_forge.ValidationResult.merge",false]],"merge() (type_forge.validators.validationresult method)":[[28,"id91",false],[28,"id98",false],[28,"type_forge.validators.ValidationResult.merge",false]],"message (type_forge.typing.validation.validationissue attribute)":[[20,"type_forge.typing.validation.ValidationIssue.message",false]],"message (type_forge.typing.validationissue attribute)":[[15,"type_forge.typing.ValidationIssue.message",false]],"message (type_forge.validators.validationissue attribute)":[[28,"type_forge.validators.ValidationIssue.message",false]],"missing_key (type_forge.core.exceptions.typeviolationkind attribute)":[[5,"type_forge.core.exceptions.TypeViolationKind.MISSING_KEY",false]],"missing_key (type_forge.core.typeviolationkind attribute)":[[6,"type_forge.core.TypeViolationKind.MISSING_KEY",false]],"missing_key (type_forge.typeviolationkind attribute)":[[9,"type_forge.TypeViolationKind.MISSING_KEY",false]],"missing_key (type_forge.validators.typeviolationkind attribute)":[[28,"id71",false],[28,"id86",false],[28,"type_forge.validators.TypeViolationKind.MISSING_KEY",false]],"module":[[4,"module-type_forge.core.base",false],[5,"module-type_forge.core.exceptions",false],[6,"module-type_forge.core",false],[7,"module-type_forge.forge",false],[8,"module-type_forge.forge.type_forge",false],[9,"module-type_forge",false],[10,"module-type_forge.typing.aliases",false],[11,"module-type_forge.typing.analysis",false],[12,"module-type_forge.typing.conversion",false],[13,"module-type_forge.typing.definitions",false],[14,"module-type_forge.typing.hints",false],[15,"module-type_forge.typing",false],[16,"module-type_forge.typing.mapping",false],[17,"module-type_forge.typing.naming",false],[18,"module-type_forge.typing.protocols",false],[19,"module-type_forge.typing.standardization",false],[20,"module-type_forge.typing.validation",false],[21,"module-type_forge.typing.variables",false],[22,"module-type_forge.utils.collection_manipulation",false],[23,"module-type_forge.utils",false],[24,"module-type_forge.utils.string_format",false],[25,"module-type_forge.validators.basic",false],[26,"module-type_forge.validators.composite",false],[27,"module-type_forge.validators.factory",false],[28,"module-type_forge.validators",false]],"network (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.NETWORK",false]],"none (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.NONE",false]],"normalize() (type_forge.typing.protocols.typenormalizer method)":[[18,"type_forge.typing.protocols.TypeNormalizer.normalize",false]],"normalize() (type_forge.typing.typenormalizer method)":[[15,"type_forge.typing.TypeNormalizer.normalize",false]],"normalize_type() (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.normalize_type",false]],"numeric (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.NUMERIC",false]],"numerictypes (in module type_forge.typing)":[[15,"type_forge.typing.NumericTypes",false]],"numerictypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.NumericTypes",false]],"optionalconverter (in module type_forge.typing)":[[15,"type_forge.typing.OptionalConverter",false]],"optionalconverter (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.OptionalConverter",false]],"or_else() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.or_else",false]],"or_else() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.or_else",false]],"or_else_get() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.or_else_get",false]],"or_else_get() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.or_else_get",false]],"or_raise() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.or_raise",false]],"or_raise() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.or_raise",false]],"parentspectype (in module type_forge.typing)":[[15,"type_forge.typing.ParentSpecType",false]],"parentspectype (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ParentSpecType",false]],"parentspectype (in module type_forge.validators)":[[28,"type_forge.validators.ParentSpecType",false]],"parentspectype_co (in module type_forge.typing)":[[15,"type_forge.typing.ParentSpecType_co",false]],"parentspectype_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ParentSpecType_co",false]],"parentspectype_contra (in module type_forge.typing)":[[15,"type_forge.typing.ParentSpecType_contra",false]],"parentspectype_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ParentSpecType_contra",false]],"partition_list() (in module type_forge.utils.collection_manipulation)":[[22,"type_forge.utils.collection_manipulation.partition_list",false]],"path (type_forge.core.exceptions.typeviolation attribute)":[[5,"type_forge.core.exceptions.TypeViolation.path",false]],"path (type_forge.core.typeviolation attribute)":[[6,"type_forge.core.TypeViolation.path",false]],"path (type_forge.typeviolation attribute)":[[9,"type_forge.TypeViolation.path",false]],"path (type_forge.typing.validation.validationissue attribute)":[[20,"type_forge.typing.validation.ValidationIssue.path",false]],"path (type_forge.typing.validationissue attribute)":[[15,"type_forge.typing.ValidationIssue.path",false]],"path (type_forge.validators.typeviolation attribute)":[[28,"id39",false],[28,"id50",false],[28,"type_forge.validators.TypeViolation.path",false]],"path (type_forge.validators.validationissue attribute)":[[28,"type_forge.validators.ValidationIssue.path",false]],"pathsegmentt (in module type_forge.typing)":[[15,"type_forge.typing.PathSegmentT",false]],"pathsegmentt (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.PathSegmentT",false]],"patht (in module type_forge.typing)":[[15,"type_forge.typing.PathT",false]],"patht (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.PathT",false]],"permissive (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.PERMISSIVE",false]],"pluralize() (in module type_forge.utils.string_format)":[[24,"type_forge.utils.string_format.pluralize",false]],"predicatefunc (in module type_forge.typing)":[[15,"type_forge.typing.PredicateFunc",false]],"predicatefunc (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.PredicateFunc",false]],"predicatefunc_contra (in module type_forge.typing)":[[15,"type_forge.typing.PredicateFunc_contra",false]],"predicatefunc_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.PredicateFunc_contra",false]],"primitive_category (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.PRIMITIVE_CATEGORY",false]],"primitivetypes (in module type_forge.typing)":[[15,"type_forge.typing.PrimitiveTypes",false]],"primitivetypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.PrimitiveTypes",false]],"protocol (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.PROTOCOL",false]],"protocol_compatible (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.PROTOCOL_COMPATIBLE",false]],"r (in module type_forge.forge)":[[7,"type_forge.forge.R",false]],"r (in module type_forge.typing)":[[15,"type_forge.typing.R",false]],"r (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.R",false]],"r_co (in module type_forge.typing)":[[15,"type_forge.typing.R_co",false]],"r_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.R_co",false]],"r_contra (in module type_forge.typing)":[[15,"type_forge.typing.R_contra",false]],"r_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.R_contra",false]],"recover() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.recover",false]],"recover() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.recover",false]],"recursive (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.RECURSIVE",false]],"register() (type_forge.typing.protocols.typeregistry method)":[[18,"type_forge.typing.protocols.TypeRegistry.register",false]],"register() (type_forge.typing.typeregistryprotocol method)":[[15,"type_forge.typing.TypeRegistryProtocol.register",false]],"register_converter() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.register_converter",false]],"register_type() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.register_type",false]],"s (in module type_forge.forge)":[[7,"type_forge.forge.S",false]],"s (in module type_forge.typing)":[[15,"type_forge.typing.S",false]],"s (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.S",false]],"s_co (in module type_forge.typing)":[[15,"type_forge.typing.S_co",false]],"s_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.S_co",false]],"s_contra (in module type_forge.typing)":[[15,"type_forge.typing.S_contra",false]],"s_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.S_contra",false]],"safe_bool_convert() (in module type_forge.typing)":[[15,"type_forge.typing.safe_bool_convert",false]],"safe_bool_convert() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.safe_bool_convert",false]],"safe_bool_convert() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.safe_bool_convert",false]],"safe_bool_convert() (type_forge.validators.basicvalidator static method)":[[28,"id4",false],[28,"type_forge.validators.BasicValidator.safe_bool_convert",false]],"safe_convert (in module type_forge.forge)":[[7,"type_forge.forge.safe_convert",false]],"safe_convert() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.safe_convert",false]],"safe_float_convert() (in module type_forge.typing)":[[15,"type_forge.typing.safe_float_convert",false]],"safe_float_convert() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.safe_float_convert",false]],"safe_float_convert() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.safe_float_convert",false]],"safe_float_convert() (type_forge.validators.basicvalidator static method)":[[28,"id5",false],[28,"type_forge.validators.BasicValidator.safe_float_convert",false]],"safe_int_convert() (in module type_forge.typing)":[[15,"type_forge.typing.safe_int_convert",false]],"safe_int_convert() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.safe_int_convert",false]],"safe_int_convert() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.safe_int_convert",false]],"safe_int_convert() (type_forge.validators.basicvalidator static method)":[[28,"id6",false],[28,"type_forge.validators.BasicValidator.safe_int_convert",false]],"safe_str_convert() (in module type_forge.typing)":[[15,"type_forge.typing.safe_str_convert",false]],"safe_str_convert() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.safe_str_convert",false]],"safe_str_convert() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.safe_str_convert",false]],"safe_str_convert() (type_forge.validators.basicvalidator static method)":[[28,"id7",false],[28,"type_forge.validators.BasicValidator.safe_str_convert",false]],"schema_mismatch (type_forge.core.exceptions.typeviolationkind attribute)":[[5,"type_forge.core.exceptions.TypeViolationKind.SCHEMA_MISMATCH",false]],"schema_mismatch (type_forge.core.typeviolationkind attribute)":[[6,"type_forge.core.TypeViolationKind.SCHEMA_MISMATCH",false]],"schema_mismatch (type_forge.typeviolationkind attribute)":[[9,"type_forge.TypeViolationKind.SCHEMA_MISMATCH",false]],"schema_mismatch (type_forge.validators.typeviolationkind attribute)":[[28,"id72",false],[28,"id87",false],[28,"type_forge.validators.TypeViolationKind.SCHEMA_MISMATCH",false]],"schemanodet (in module type_forge.typing)":[[15,"type_forge.typing.SchemaNodeT",false]],"schemanodet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SchemaNodeT",false]],"schemasequencet (in module type_forge.typing)":[[15,"type_forge.typing.SchemaSequenceT",false]],"schemasequencet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SchemaSequenceT",false]],"schematypemappingt (in module type_forge.typing)":[[15,"type_forge.typing.SchemaTypeMappingT",false]],"schematypemappingt (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SchemaTypeMappingT",false]],"schematypet (in module type_forge.typing)":[[15,"type_forge.typing.SchemaTypeT",false]],"schematypet (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SchemaTypeT",false]],"schematypet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SchemaTypeT",false]],"schematypet (in module type_forge.validators)":[[28,"type_forge.validators.SchemaTypeT",false]],"schematypet_co (in module type_forge.typing)":[[15,"type_forge.typing.SchemaTypeT_co",false]],"schematypet_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SchemaTypeT_co",false]],"schematypet_contra (in module type_forge.typing)":[[15,"type_forge.typing.SchemaTypeT_contra",false]],"schematypet_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SchemaTypeT_contra",false]],"schemavaluenodet (in module type_forge.typing)":[[15,"type_forge.typing.SchemaValueNodeT",false]],"schemavaluenodet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SchemaValueNodeT",false]],"schemavaluet (in module type_forge.typing)":[[15,"type_forge.typing.SchemaValueT",false]],"schemavaluet (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SchemaValueT",false]],"schemavaluet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SchemaValueT",false]],"schemavaluet_co (in module type_forge.typing)":[[15,"type_forge.typing.SchemaValueT_co",false]],"schemavaluet_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SchemaValueT_co",false]],"schemavaluet_contra (in module type_forge.typing)":[[15,"type_forge.typing.SchemaValueT_contra",false]],"schemavaluet_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SchemaValueT_contra",false]],"sequencet (in module type_forge.typing)":[[15,"type_forge.typing.SequenceT",false]],"sequencet (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SequenceT",false]],"sequencet_co (in module type_forge.typing)":[[15,"type_forge.typing.SequenceT_co",false]],"sequencet_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SequenceT_co",false]],"sequencetypes (in module type_forge.typing)":[[15,"type_forge.typing.SequenceTypes",false]],"sequencetypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SequenceTypes",false]],"sett (in module type_forge.typing)":[[15,"type_forge.typing.SetT",false]],"sett (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SetT",false]],"sett_co (in module type_forge.typing)":[[15,"type_forge.typing.SetT_co",false]],"sett_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SetT_co",false]],"settypes (in module type_forge.typing)":[[15,"type_forge.typing.SetTypes",false]],"settypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.SetTypes",false]],"severity (type_forge.typing.validation.validationissue attribute)":[[20,"type_forge.typing.validation.ValidationIssue.severity",false]],"severity (type_forge.typing.validationissue attribute)":[[15,"type_forge.typing.ValidationIssue.severity",false]],"severity (type_forge.validators.validationissue attribute)":[[28,"type_forge.validators.ValidationIssue.severity",false]],"singletypet (in module type_forge.typing)":[[15,"type_forge.typing.SingleTypeT",false]],"singletypet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.SingleTypeT",false]],"snake_to_camel() (in module type_forge.utils.string_format)":[[24,"type_forge.utils.string_format.snake_to_camel",false]],"special (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.SPECIAL",false]],"special_category (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.SPECIAL_CATEGORY",false]],"standard (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.STANDARD",false]],"standardize() (type_forge.typing.protocols.typestandardizer method)":[[18,"type_forge.typing.protocols.TypeStandardizer.standardize",false]],"standardize() (type_forge.typing.typestandardizer method)":[[15,"type_forge.typing.TypeStandardizer.standardize",false]],"standardize_type_name() (in module type_forge.typing)":[[15,"type_forge.typing.standardize_type_name",false]],"standardize_type_name() (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.standardize_type_name",false]],"standardize_typename() (in module type_forge.utils.string_format)":[[24,"type_forge.utils.string_format.standardize_typename",false]],"strict (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.STRICT",false]],"structural (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.STRUCTURAL",false]],"structural (type_forge.typing.definitions.validationlevel attribute)":[[13,"type_forge.typing.definitions.ValidationLevel.STRUCTURAL",false]],"structurally_compatible (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.STRUCTURALLY_COMPATIBLE",false]],"subtype (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.SUBTYPE",false]],"success (type_forge.typing.conversion.conversionresult attribute)":[[12,"type_forge.typing.conversion.ConversionResult.success",false]],"success (type_forge.typing.conversionresult attribute)":[[15,"type_forge.typing.ConversionResult.success",false]],"supertype (type_forge.typing.definitions.typecompatibility attribute)":[[13,"type_forge.typing.definitions.TypeCompatibility.SUPERTYPE",false]],"supportsboolconversion (class in type_forge.typing)":[[15,"type_forge.typing.SupportsBoolConversion",false]],"supportsboolconversion (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsBoolConversion",false]],"supportsboolconversion (class in type_forge.validators)":[[28,"type_forge.validators.SupportsBoolConversion",false]],"supportscomparison (class in type_forge.typing)":[[15,"type_forge.typing.SupportsComparison",false]],"supportscomparison (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsComparison",false]],"supportsequality (class in type_forge.typing)":[[15,"type_forge.typing.SupportsEquality",false]],"supportsequality (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsEquality",false]],"supportsfloat (class in type_forge.typing)":[[15,"type_forge.typing.SupportsFloat",false]],"supportsfloat (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsFloat",false]],"supportsfloat (class in type_forge.validators)":[[28,"type_forge.validators.SupportsFloat",false]],"supportsfloatconversion (class in type_forge.typing)":[[15,"type_forge.typing.SupportsFloatConversion",false]],"supportsfloatconversion (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsFloatConversion",false]],"supportsfloatconversion (class in type_forge.validators)":[[28,"type_forge.validators.SupportsFloatConversion",false]],"supportsgetattr (class in type_forge.typing)":[[15,"type_forge.typing.SupportsGetAttr",false]],"supportsgetattr (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsGetAttr",false]],"supportsgetitem (class in type_forge.typing)":[[15,"type_forge.typing.SupportsGetItem",false]],"supportsgetitem (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsGetItem",false]],"supportsint (class in type_forge.typing)":[[15,"type_forge.typing.SupportsInt",false]],"supportsint (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsInt",false]],"supportsint (class in type_forge.validators)":[[28,"type_forge.validators.SupportsInt",false]],"supportsintconversion (class in type_forge.typing)":[[15,"type_forge.typing.SupportsIntConversion",false]],"supportsintconversion (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsIntConversion",false]],"supportsintconversion (class in type_forge.validators)":[[28,"type_forge.validators.SupportsIntConversion",false]],"supportsiteration (class in type_forge.typing)":[[15,"type_forge.typing.SupportsIteration",false]],"supportsiteration (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsIteration",false]],"supportslen (class in type_forge.typing)":[[15,"type_forge.typing.SupportsLen",false]],"supportslen (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsLen",false]],"supportslength (class in type_forge.typing)":[[15,"type_forge.typing.SupportsLength",false]],"supportslength (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsLength",false]],"supportsmapping (class in type_forge.typing)":[[15,"type_forge.typing.SupportsMapping",false]],"supportsmapping (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsMapping",false]],"supportsstrconversion (class in type_forge.typing)":[[15,"type_forge.typing.SupportsStrConversion",false]],"supportsstrconversion (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsStrConversion",false]],"supportstypecheck (class in type_forge.typing)":[[15,"type_forge.typing.SupportsTypeCheck",false]],"supportstypecheck (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.SupportsTypeCheck",false]],"t (in module type_forge.forge)":[[7,"type_forge.forge.T",false]],"t (in module type_forge.typing)":[[15,"type_forge.typing.T",false]],"t (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.T",false]],"t (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.T",false]],"t (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.T",false]],"t (in module type_forge.validators)":[[28,"id103",false],[28,"id104",false],[28,"id105",false],[28,"type_forge.validators.T",false]],"t (in module type_forge.validators.basic)":[[25,"type_forge.validators.basic.T",false]],"t (in module type_forge.validators.composite)":[[26,"type_forge.validators.composite.T",false]],"t_co (in module type_forge.forge)":[[7,"type_forge.forge.T_co",false]],"t_co (in module type_forge.typing)":[[15,"type_forge.typing.T_co",false]],"t_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.T_co",false]],"t_contra (in module type_forge.forge)":[[7,"type_forge.forge.T_contra",false]],"t_contra (in module type_forge.typing)":[[15,"type_forge.typing.T_contra",false]],"t_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.T_contra",false]],"tcallable (in module type_forge.typing)":[[15,"type_forge.typing.TCallable",false]],"tcallable (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TCallable",false]],"tcallable_co (in module type_forge.typing)":[[15,"type_forge.typing.TCallable_co",false]],"tcallable_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TCallable_co",false]],"tcallable_contra (in module type_forge.typing)":[[15,"type_forge.typing.TCallable_contra",false]],"tcallable_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TCallable_contra",false]],"tcollection (in module type_forge.typing)":[[15,"type_forge.typing.TCollection",false]],"tcollection (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TCollection",false]],"tcollection_co (in module type_forge.typing)":[[15,"type_forge.typing.TCollection_co",false]],"tcollection_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TCollection_co",false]],"tcollection_contra (in module type_forge.typing)":[[15,"type_forge.typing.TCollection_contra",false]],"tcollection_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TCollection_contra",false]],"terror (in module type_forge.typing)":[[15,"type_forge.typing.TError",false]],"terror (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TError",false]],"terror_co (in module type_forge.typing)":[[15,"type_forge.typing.TError_co",false]],"terror_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TError_co",false]],"terror_contra (in module type_forge.typing)":[[15,"type_forge.typing.TError_contra",false]],"terror_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TError_contra",false]],"text (type_forge.typing.definitions.typecategory attribute)":[[13,"type_forge.typing.definitions.TypeCategory.TEXT",false]],"texttypes (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TextTypes",false]],"then() (type_forge.typing.conversion.conversionresult method)":[[12,"type_forge.typing.conversion.ConversionResult.then",false]],"then() (type_forge.typing.conversionresult method)":[[15,"type_forge.typing.ConversionResult.then",false]],"tinstance (in module type_forge.typing)":[[15,"type_forge.typing.TInstance",false]],"tinstance (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TInstance",false]],"tinstance_co (in module type_forge.typing)":[[15,"type_forge.typing.TInstance_co",false]],"tinstance_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TInstance_co",false]],"tinstance_contra (in module type_forge.typing)":[[15,"type_forge.typing.TInstance_contra",false]],"tinstance_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TInstance_contra",false]],"transformfunc (in module type_forge.typing)":[[15,"type_forge.typing.TransformFunc",false]],"transformfunc (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TransformFunc",false]],"transformfunc_co_contra (in module type_forge.typing)":[[15,"type_forge.typing.TransformFunc_co_contra",false]],"transformfunc_co_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TransformFunc_co_contra",false]],"transpose_dict_of_lists() (in module type_forge.utils.collection_manipulation)":[[22,"type_forge.utils.collection_manipulation.transpose_dict_of_lists",false]],"try_convert() (in module type_forge.typing)":[[15,"type_forge.typing.try_convert",false]],"try_convert() (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.try_convert",false]],"tryresult (in module type_forge.typing)":[[15,"type_forge.typing.TryResult",false]],"tryresult (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TryResult",false]],"tuplet (in module type_forge.typing)":[[15,"type_forge.typing.TupleT",false]],"tuplet (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TupleT",false]],"tuplet_co (in module type_forge.typing)":[[15,"type_forge.typing.TupleT_co",false]],"tuplet_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TupleT_co",false]],"tvalue (in module type_forge.typing)":[[15,"type_forge.typing.TValue",false]],"tvalue (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TValue",false]],"tvalue_co (in module type_forge.typing)":[[15,"type_forge.typing.TValue_co",false]],"tvalue_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TValue_co",false]],"tvalue_contra (in module type_forge.typing)":[[15,"type_forge.typing.TValue_contra",false]],"tvalue_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.TValue_contra",false]],"type_forge":[[9,"module-type_forge",false]],"type_forge.core":[[6,"module-type_forge.core",false]],"type_forge.core.base":[[4,"module-type_forge.core.base",false]],"type_forge.core.exceptions":[[5,"module-type_forge.core.exceptions",false]],"type_forge.forge":[[7,"module-type_forge.forge",false]],"type_forge.forge.type_forge":[[8,"module-type_forge.forge.type_forge",false]],"type_forge.typing":[[15,"module-type_forge.typing",false]],"type_forge.typing.aliases":[[10,"module-type_forge.typing.aliases",false]],"type_forge.typing.analysis":[[11,"module-type_forge.typing.analysis",false]],"type_forge.typing.conversion":[[12,"module-type_forge.typing.conversion",false]],"type_forge.typing.definitions":[[13,"module-type_forge.typing.definitions",false]],"type_forge.typing.hints":[[14,"module-type_forge.typing.hints",false]],"type_forge.typing.mapping":[[16,"module-type_forge.typing.mapping",false]],"type_forge.typing.naming":[[17,"module-type_forge.typing.naming",false]],"type_forge.typing.protocols":[[18,"module-type_forge.typing.protocols",false]],"type_forge.typing.standardization":[[19,"module-type_forge.typing.standardization",false]],"type_forge.typing.validation":[[20,"module-type_forge.typing.validation",false]],"type_forge.typing.variables":[[21,"module-type_forge.typing.variables",false]],"type_forge.utils":[[23,"module-type_forge.utils",false]],"type_forge.utils.collection_manipulation":[[22,"module-type_forge.utils.collection_manipulation",false]],"type_forge.utils.string_format":[[24,"module-type_forge.utils.string_format",false]],"type_forge.validators":[[28,"module-type_forge.validators",false]],"type_forge.validators.basic":[[25,"module-type_forge.validators.basic",false]],"type_forge.validators.composite":[[26,"module-type_forge.validators.composite",false]],"type_forge.validators.factory":[[27,"module-type_forge.validators.factory",false]],"typecategory (class in type_forge.typing.definitions)":[[13,"type_forge.typing.definitions.TypeCategory",false]],"typecategoryliteral (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.TypeCategoryLiteral",false]],"typecompatibility (class in type_forge.typing.definitions)":[[13,"type_forge.typing.definitions.TypeCompatibility",false]],"typeconverter (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeConverter",false]],"typeconverter (in module type_forge.typing)":[[15,"type_forge.typing.TypeConverter",false]],"typeconverter (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeConverter",false]],"typeconverterprotocol (class in type_forge.typing)":[[15,"type_forge.typing.TypeConverterProtocol",false]],"typeconvertersafe (in module type_forge.typing)":[[15,"type_forge.typing.TypeConverterSafe",false]],"typeconvertersafe (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeConverterSafe",false]],"typecreationerror":[[5,"type_forge.core.exceptions.TypeCreationError",false],[6,"type_forge.core.TypeCreationError",false]],"typedconverter (class in type_forge.typing)":[[15,"type_forge.typing.TypedConverter",false]],"typedconverter (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypedConverter",false]],"typededuplicator (class in type_forge.typing)":[[15,"type_forge.typing.TypeDeduplicator",false]],"typededuplicator (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeDeduplicator",false]],"typedescription (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.TypeDescription",false]],"typedistance (in module type_forge.typing)":[[15,"type_forge.typing.TypeDistance",false]],"typedistance (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeDistance",false]],"typefactory (class in type_forge.typing)":[[15,"type_forge.typing.TypeFactory",false]],"typefactory (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeFactory",false]],"typeforge (class in type_forge.forge.type_forge)":[[8,"type_forge.forge.type_forge.TypeForge",false]],"typeforge (class in type_forge.typing)":[[15,"type_forge.typing.TypeForge",false]],"typeforge (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeForge",false]],"typeforgebase (class in type_forge.core)":[[6,"type_forge.core.TypeForgeBase",false]],"typeforgebase (class in type_forge.core.base)":[[4,"type_forge.core.base.TypeForgeBase",false]],"typeforgeexception":[[5,"type_forge.core.exceptions.TypeForgeException",false],[6,"type_forge.core.TypeForgeException",false]],"typeguardfunc (in module type_forge.typing)":[[15,"type_forge.typing.TypeGuardFunc",false]],"typeguardfunc (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeGuardFunc",false]],"typeguardfunct (in module type_forge.typing)":[[15,"type_forge.typing.TypeGuardFuncT",false]],"typeguardfunct (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeGuardFuncT",false]],"typehierarchy (in module type_forge.typing)":[[15,"type_forge.typing.TypeHierarchy",false]],"typehierarchy (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeHierarchy",false]],"typeidentifier (in module type_forge.typing)":[[15,"type_forge.typing.TypeIdentifier",false]],"typeidentifier (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeIdentifier",false]],"typeinfo (class in type_forge.typing)":[[15,"type_forge.typing.TypeInfo",false]],"typeinfo (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeInfo",false]],"typemap (in module type_forge.typing)":[[15,"type_forge.typing.TypeMap",false]],"typemap (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeMap",false]],"typemapfrom (in module type_forge.typing)":[[15,"type_forge.typing.TypeMapFrom",false]],"typemapfrom (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeMapFrom",false]],"typemapsr (in module type_forge.typing)":[[15,"type_forge.typing.TypeMapSR",false]],"typemapsr (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeMapSR",false]],"typemapto (in module type_forge.typing)":[[15,"type_forge.typing.TypeMapTo",false]],"typemapto (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeMapTo",false]],"typematch (in module type_forge.typing)":[[15,"type_forge.typing.TypeMatch",false]],"typematch (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeMatch",false]],"typename (in module type_forge.typing)":[[15,"type_forge.typing.TypeName",false]],"typename (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeName",false]],"typename (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.TypeName",false]],"typenormalizer (class in type_forge.typing)":[[15,"type_forge.typing.TypeNormalizer",false]],"typenormalizer (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeNormalizer",false]],"typeobject (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.TypeObject",false]],"typepath (in module type_forge.typing)":[[15,"type_forge.typing.TypePath",false]],"typepath (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypePath",false]],"typeprecedence (in module type_forge.typing)":[[15,"type_forge.typing.TypePrecedence",false]],"typeprecedence (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypePrecedence",false]],"typeprotocol (class in type_forge.typing.naming)":[[17,"type_forge.typing.naming.TypeProtocol",false]],"typeregistry (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeRegistry",false]],"typeregistry (in module type_forge.typing)":[[15,"type_forge.typing.TypeRegistry",false]],"typeregistry (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeRegistry",false]],"typeregistryprotocol (class in type_forge.typing)":[[15,"type_forge.typing.TypeRegistryProtocol",false]],"typeregistryt (in module type_forge.typing)":[[15,"type_forge.typing.TypeRegistryT",false]],"typeregistryt (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeRegistryT",false]],"typeregistryt_co (in module type_forge.typing)":[[15,"type_forge.typing.TypeRegistryT_co",false]],"typeregistryt_co (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeRegistryT_co",false]],"typeregistryt_contra (in module type_forge.typing)":[[15,"type_forge.typing.TypeRegistryT_contra",false]],"typeregistryt_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeRegistryT_contra",false]],"typerelationship (in module type_forge.typing)":[[15,"type_forge.typing.TypeRelationship",false]],"typerelationship (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.TypeRelationship",false]],"typerelationshipanalyzer (class in type_forge.typing)":[[15,"type_forge.typing.TypeRelationshipAnalyzer",false]],"typerelationshipanalyzer (class in type_forge.typing.analysis)":[[11,"type_forge.typing.analysis.TypeRelationshipAnalyzer",false]],"types (type_forge.forge.type_forge.typeforge attribute)":[[8,"type_forge.forge.type_forge.TypeForge.types",false]],"typestandardizer (class in type_forge.typing)":[[15,"type_forge.typing.TypeStandardizer",false]],"typestandardizer (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.TypeStandardizer",false]],"typeviolation (class in type_forge)":[[9,"type_forge.TypeViolation",false]],"typeviolation (class in type_forge.core)":[[6,"type_forge.core.TypeViolation",false]],"typeviolation (class in type_forge.core.exceptions)":[[5,"type_forge.core.exceptions.TypeViolation",false]],"typeviolation (class in type_forge.validators)":[[28,"id29",false],[28,"id40",false],[28,"type_forge.validators.TypeViolation",false]],"typeviolationkind (class in type_forge)":[[9,"type_forge.TypeViolationKind",false]],"typeviolationkind (class in type_forge.core)":[[6,"type_forge.core.TypeViolationKind",false]],"typeviolationkind (class in type_forge.core.exceptions)":[[5,"type_forge.core.exceptions.TypeViolationKind",false]],"typeviolationkind (class in type_forge.validators)":[[28,"id59",false],[28,"id74",false],[28,"type_forge.validators.TypeViolationKind",false]],"u (in module type_forge.typing)":[[15,"type_forge.typing.U",false]],"u (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.U",false]],"u (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.U",false]],"u (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.U",false]],"u_co (in module type_forge.typing)":[[15,"type_forge.typing.U_co",false]],"u_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.U_co",false]],"u_contra (in module type_forge.typing)":[[15,"type_forge.typing.U_contra",false]],"u_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.U_contra",false]],"uniontypet (in module type_forge.typing)":[[15,"type_forge.typing.UnionTypeT",false]],"uniontypet (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.UnionTypeT",false]],"v (in module type_forge.typing)":[[15,"type_forge.typing.V",false]],"v (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.V",false]],"v (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.V",false]],"v (in module type_forge.validators)":[[28,"type_forge.validators.V",false]],"v (in module type_forge.validators.factory)":[[27,"type_forge.validators.factory.V",false]],"v_co (in module type_forge.typing)":[[15,"type_forge.typing.V_co",false]],"v_co (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.V_co",false]],"v_contra (in module type_forge.typing)":[[15,"type_forge.typing.V_contra",false]],"v_contra (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.V_contra",false]],"valid (type_forge.core.base.validationresult attribute)":[[4,"type_forge.core.base.ValidationResult.valid",false]],"valid (type_forge.core.validationresult attribute)":[[6,"type_forge.core.ValidationResult.valid",false]],"valid (type_forge.validationresult attribute)":[[9,"type_forge.ValidationResult.valid",false]],"valid (type_forge.validators.validationresult attribute)":[[28,"id101",false],[28,"id94",false],[28,"type_forge.validators.ValidationResult.valid",false]],"validate (in module type_forge.forge)":[[7,"type_forge.forge.validate",false]],"validate() (type_forge.core.base.basevalidator method)":[[4,"type_forge.core.base.BaseValidator.validate",false]],"validate() (type_forge.core.base.typeforgebase method)":[[4,"type_forge.core.base.TypeForgeBase.validate",false]],"validate() (type_forge.core.basevalidator method)":[[6,"type_forge.core.BaseValidator.validate",false]],"validate() (type_forge.core.typeforgebase method)":[[6,"type_forge.core.TypeForgeBase.validate",false]],"validate() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.validate",false]],"validate() (type_forge.typing.compositevalidator method)":[[15,"type_forge.typing.CompositeValidator.validate",false]],"validate() (type_forge.typing.protocols.compositevalidator method)":[[18,"type_forge.typing.protocols.CompositeValidator.validate",false]],"validate() (type_forge.typing.protocols.validator method)":[[18,"type_forge.typing.protocols.Validator.validate",false]],"validate() (type_forge.typing.validator method)":[[15,"type_forge.typing.Validator.validate",false]],"validate() (type_forge.validators.basevalidator method)":[[28,"id1",false],[28,"type_forge.validators.BaseValidator.validate",false]],"validate() (type_forge.validators.basic.basicvalidator method)":[[25,"type_forge.validators.basic.BasicValidator.validate",false]],"validate() (type_forge.validators.basicvalidator method)":[[28,"id8",false],[28,"type_forge.validators.BasicValidator.validate",false]],"validate() (type_forge.validators.composite.compositevalidator method)":[[26,"type_forge.validators.composite.CompositeValidator.validate",false]],"validate() (type_forge.validators.compositevalidator method)":[[28,"id20",false],[28,"type_forge.validators.CompositeValidator.validate",false]],"validate_and_convert (in module type_forge.forge)":[[7,"type_forge.forge.validate_and_convert",false]],"validate_and_convert() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.validate_and_convert",false]],"validate_boolean() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.validate_boolean",false]],"validate_boolean() (type_forge.validators.basicvalidator static method)":[[28,"id9",false],[28,"type_forge.validators.BasicValidator.validate_boolean",false]],"validate_dict() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.validate_dict",false]],"validate_dict() (type_forge.validators.basicvalidator static method)":[[28,"id10",false],[28,"type_forge.validators.BasicValidator.validate_dict",false]],"validate_dict() (type_forge.validators.factory.validatorfactory static method)":[[27,"type_forge.validators.factory.ValidatorFactory.validate_dict",false]],"validate_dict() (type_forge.validators.validatorfactory static method)":[[28,"type_forge.validators.ValidatorFactory.validate_dict",false]],"validate_dict_schema (in module type_forge.forge)":[[7,"type_forge.forge.validate_dict_schema",false]],"validate_dict_schema() (type_forge.forge.type_forge.typeforge static method)":[[8,"type_forge.forge.type_forge.TypeForge.validate_dict_schema",false]],"validate_float() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.validate_float",false]],"validate_float() (type_forge.validators.basicvalidator static method)":[[28,"id11",false],[28,"type_forge.validators.BasicValidator.validate_float",false]],"validate_integer() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.validate_integer",false]],"validate_integer() (type_forge.validators.basicvalidator static method)":[[28,"id12",false],[28,"type_forge.validators.BasicValidator.validate_integer",false]],"validate_list() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.validate_list",false]],"validate_list() (type_forge.validators.basicvalidator static method)":[[28,"id13",false],[28,"type_forge.validators.BasicValidator.validate_list",false]],"validate_recursive (in module type_forge.forge)":[[7,"type_forge.forge.validate_recursive",false]],"validate_recursive() (type_forge.forge.type_forge.typeforge static method)":[[8,"type_forge.forge.type_forge.TypeForge.validate_recursive",false]],"validate_recursive() (type_forge.validators.factory.validatorfactory static method)":[[27,"type_forge.validators.factory.ValidatorFactory.validate_recursive",false]],"validate_recursive() (type_forge.validators.validatorfactory static method)":[[28,"type_forge.validators.ValidatorFactory.validate_recursive",false]],"validate_string() (type_forge.validators.basic.basicvalidator static method)":[[25,"type_forge.validators.basic.BasicValidator.validate_string",false]],"validate_string() (type_forge.validators.basicvalidator static method)":[[28,"id14",false],[28,"type_forge.validators.BasicValidator.validate_string",false]],"validate_type (in module type_forge.forge)":[[7,"type_forge.forge.validate_type",false]],"validate_type() (type_forge.forge.type_forge.typeforge static method)":[[8,"type_forge.forge.type_forge.TypeForge.validate_type",false]],"validate_type() (type_forge.validators.factory.validatorfactory static method)":[[27,"type_forge.validators.factory.ValidatorFactory.validate_type",false]],"validate_type() (type_forge.validators.validatorfactory static method)":[[28,"type_forge.validators.ValidatorFactory.validate_type",false]],"validate_with_detail() (type_forge.core.base.basevalidator method)":[[4,"type_forge.core.base.BaseValidator.validate_with_detail",false]],"validate_with_detail() (type_forge.core.base.typeforgebase method)":[[4,"type_forge.core.base.TypeForgeBase.validate_with_detail",false]],"validate_with_detail() (type_forge.core.basevalidator method)":[[6,"type_forge.core.BaseValidator.validate_with_detail",false]],"validate_with_detail() (type_forge.core.typeforgebase method)":[[6,"type_forge.core.TypeForgeBase.validate_with_detail",false]],"validate_with_detail() (type_forge.forge.type_forge.typeforge method)":[[8,"type_forge.forge.type_forge.TypeForge.validate_with_detail",false]],"validate_with_detail() (type_forge.validators.basevalidator method)":[[28,"id2",false],[28,"type_forge.validators.BaseValidator.validate_with_detail",false]],"validate_with_detail() (type_forge.validators.basic.basicvalidator method)":[[25,"type_forge.validators.basic.BasicValidator.validate_with_detail",false]],"validate_with_detail() (type_forge.validators.basicvalidator method)":[[28,"id15",false],[28,"type_forge.validators.BasicValidator.validate_with_detail",false]],"validate_with_detail() (type_forge.validators.composite.compositevalidator method)":[[26,"type_forge.validators.composite.CompositeValidator.validate_with_detail",false]],"validate_with_detail() (type_forge.validators.compositevalidator method)":[[28,"id21",false],[28,"type_forge.validators.CompositeValidator.validate_with_detail",false]],"validate_with_details() (type_forge.validators.composite.compositevalidator method)":[[26,"type_forge.validators.composite.CompositeValidator.validate_with_details",false]],"validate_with_details() (type_forge.validators.compositevalidator method)":[[28,"id22",false],[28,"type_forge.validators.CompositeValidator.validate_with_details",false]],"validationchain (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationChain",false]],"validationcontext (in module type_forge)":[[9,"type_forge.ValidationContext",false]],"validationcontext (in module type_forge.typing)":[[15,"type_forge.typing.ValidationContext",false]],"validationcontext (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationContext",false]],"validationerror":[[5,"type_forge.core.exceptions.ValidationError",false],[6,"type_forge.core.ValidationError",false]],"validationfunc (in module type_forge.typing)":[[15,"type_forge.typing.ValidationFunc",false]],"validationfunc (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationFunc",false]],"validationfunct (in module type_forge.typing)":[[15,"type_forge.typing.ValidationFuncT",false]],"validationfunct (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationFuncT",false]],"validationfunct_contra (in module type_forge.typing)":[[15,"type_forge.typing.ValidationFuncT_contra",false]],"validationfunct_contra (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationFuncT_contra",false]],"validationissue (class in type_forge.typing)":[[15,"type_forge.typing.ValidationIssue",false]],"validationissue (class in type_forge.typing.validation)":[[20,"type_forge.typing.validation.ValidationIssue",false]],"validationissue (class in type_forge.validators)":[[28,"type_forge.validators.ValidationIssue",false]],"validationlevel (class in type_forge.typing.definitions)":[[13,"type_forge.typing.definitions.ValidationLevel",false]],"validationoptions (in module type_forge.typing)":[[15,"type_forge.typing.ValidationOptions",false]],"validationoptions (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationOptions",false]],"validationpath (in module type_forge.typing)":[[15,"type_forge.typing.ValidationPath",false]],"validationpath (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationPath",false]],"validationreport (class in type_forge.typing)":[[15,"type_forge.typing.ValidationReport",false]],"validationreport (class in type_forge.typing.validation)":[[20,"type_forge.typing.validation.ValidationReport",false]],"validationreport (class in type_forge.validators)":[[28,"type_forge.validators.ValidationReport",false]],"validationresult (class in type_forge)":[[9,"type_forge.ValidationResult",false]],"validationresult (class in type_forge.core)":[[6,"type_forge.core.ValidationResult",false]],"validationresult (class in type_forge.core.base)":[[4,"type_forge.core.base.ValidationResult",false]],"validationresult (class in type_forge.validators)":[[28,"id89",false],[28,"id96",false],[28,"type_forge.validators.ValidationResult",false]],"validationresult (in module type_forge.typing)":[[15,"type_forge.typing.ValidationResult",false]],"validationresult (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationResult",false]],"validationresultt (in module type_forge.typing)":[[15,"type_forge.typing.ValidationResultT",false]],"validationresultt (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationResultT",false]],"validationresultt (in module type_forge.typing.hints)":[[14,"type_forge.typing.hints.ValidationResultT",false]],"validationseverity (class in type_forge.typing.definitions)":[[13,"type_forge.typing.definitions.ValidationSeverity",false]],"validationstrategy (in module type_forge.typing)":[[15,"type_forge.typing.ValidationStrategy",false]],"validationstrategy (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationStrategy",false]],"validationwithpath (in module type_forge.typing)":[[15,"type_forge.typing.ValidationWithPath",false]],"validationwithpath (in module type_forge.typing.aliases)":[[10,"type_forge.typing.aliases.ValidationWithPath",false]],"validator (class in type_forge.typing)":[[15,"type_forge.typing.Validator",false]],"validator (class in type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.Validator",false]],"validatorfactory (class in type_forge.validators)":[[28,"type_forge.validators.ValidatorFactory",false]],"validatorfactory (class in type_forge.validators.factory)":[[27,"type_forge.validators.factory.ValidatorFactory",false]],"validators (type_forge.core.base.typeforgebase attribute)":[[4,"type_forge.core.base.TypeForgeBase.validators",false]],"validators (type_forge.core.typeforgebase attribute)":[[6,"type_forge.core.TypeForgeBase.validators",false]],"validators (type_forge.forge.type_forge.typeforge attribute)":[[8,"type_forge.forge.type_forge.TypeForge.validators",false]],"validators (type_forge.validators.composite.compositevalidator attribute)":[[26,"type_forge.validators.composite.CompositeValidator.validators",false]],"validators (type_forge.validators.compositevalidator attribute)":[[28,"id23",false],[28,"type_forge.validators.CompositeValidator.validators",false]],"value (type_forge.typing.conversion.conversionresult attribute)":[[12,"type_forge.typing.conversion.ConversionResult.value",false]],"value (type_forge.typing.conversionresult attribute)":[[15,"type_forge.typing.ConversionResult.value",false]],"version (in module type_forge.typing.conversion)":[[12,"type_forge.typing.conversion.version",false]],"version (in module type_forge.typing.definitions)":[[13,"type_forge.typing.definitions.version",false]],"version (in module type_forge.typing.mapping)":[[16,"type_forge.typing.mapping.version",false]],"version (in module type_forge.typing.naming)":[[17,"type_forge.typing.naming.version",false]],"version (in module type_forge.typing.protocols)":[[18,"type_forge.typing.protocols.version",false]],"version (in module type_forge.typing.standardization)":[[19,"type_forge.typing.standardization.version",false]],"version (in module type_forge.typing.validation)":[[20,"type_forge.typing.validation.version",false]],"version (in module type_forge.typing.variables)":[[21,"type_forge.typing.variables.version",false]],"version (in module type_forge.validators)":[[28,"type_forge.validators.version",false]],"violationkindliteral (in module type_forge.core.exceptions)":[[5,"type_forge.core.exceptions.ViolationKindLiteral",false]],"violations (type_forge.core.base.validationresult attribute)":[[4,"type_forge.core.base.ValidationResult.violations",false]],"violations (type_forge.core.validationresult attribute)":[[6,"type_forge.core.ValidationResult.violations",false]],"violations (type_forge.validationresult attribute)":[[9,"type_forge.ValidationResult.violations",false]],"violations (type_forge.validators.validationresult attribute)":[[28,"id102",false],[28,"id95",false],[28,"type_forge.validators.ValidationResult.violations",false]],"warning (type_forge.typing.definitions.validationseverity attribute)":[[13,"type_forge.typing.definitions.ValidationSeverity.WARNING",false]],"with_converted_value() (type_forge.core.base.validationresult method)":[[4,"type_forge.core.base.ValidationResult.with_converted_value",false]],"with_converted_value() (type_forge.core.validationresult method)":[[6,"type_forge.core.ValidationResult.with_converted_value",false]],"with_converted_value() (type_forge.validationresult method)":[[9,"type_forge.ValidationResult.with_converted_value",false]],"with_converted_value() (type_forge.validators.validationresult method)":[[28,"id92",false],[28,"id99",false],[28,"type_forge.validators.ValidationResult.with_converted_value",false]],"wrong_type (type_forge.core.exceptions.typeviolationkind attribute)":[[5,"type_forge.core.exceptions.TypeViolationKind.WRONG_TYPE",false]],"wrong_type (type_forge.core.typeviolationkind attribute)":[[6,"type_forge.core.TypeViolationKind.WRONG_TYPE",false]],"wrong_type (type_forge.typeviolationkind attribute)":[[9,"type_forge.TypeViolationKind.WRONG_TYPE",false]],"wrong_type (type_forge.validators.typeviolationkind attribute)":[[28,"id73",false],[28,"id88",false],[28,"type_forge.validators.TypeViolationKind.WRONG_TYPE",false]]},"objects":{"":[[9,0,0,"-","type_forge"]],"type_forge":[[9,1,1,"","TypeViolation"],[9,1,1,"","TypeViolationKind"],[9,4,1,"","ValidationContext"],[9,1,1,"","ValidationResult"],[6,0,0,"-","core"],[7,0,0,"-","forge"],[15,0,0,"-","typing"],[23,0,0,"-","utils"],[28,0,0,"-","validators"]],"type_forge.TypeViolation":[[9,2,1,"","__str__"],[9,3,1,"","expected"],[9,3,1,"","found"],[9,3,1,"","kind"],[9,3,1,"","path"]],"type_forge.TypeViolationKind":[[9,3,1,"","CONVERSION_ERROR"],[9,3,1,"","INVALID_VALUE"],[9,3,1,"","MISSING_KEY"],[9,3,1,"","SCHEMA_MISMATCH"],[9,3,1,"","WRONG_TYPE"],[9,2,1,"","__str__"]],"type_forge.ValidationResult":[[9,2,1,"","__bool__"],[9,3,1,"","converted_value"],[9,2,1,"","merge"],[9,3,1,"","valid"],[9,3,1,"","violations"],[9,2,1,"","with_converted_value"]],"type_forge.core":[[6,1,1,"","BaseValidator"],[6,5,1,"","ConfigurationError"],[6,5,1,"","TypeCreationError"],[6,1,1,"","TypeForgeBase"],[6,5,1,"","TypeForgeException"],[6,1,1,"","TypeViolation"],[6,1,1,"","TypeViolationKind"],[6,5,1,"","ValidationError"],[6,1,1,"","ValidationResult"],[4,0,0,"-","base"],[5,0,0,"-","exceptions"]],"type_forge.core.BaseValidator":[[6,2,1,"","validate"],[6,2,1,"","validate_with_detail"]],"type_forge.core.TypeForgeBase":[[6,2,1,"","add_validator"],[6,2,1,"","validate"],[6,2,1,"","validate_with_detail"],[6,3,1,"","validators"]],"type_forge.core.TypeViolation":[[6,2,1,"","__str__"],[6,3,1,"","expected"],[6,3,1,"","found"],[6,3,1,"","kind"],[6,3,1,"","path"]],"type_forge.core.TypeViolationKind":[[6,3,1,"","CONVERSION_ERROR"],[6,3,1,"","INVALID_VALUE"],[6,3,1,"","MISSING_KEY"],[6,3,1,"","SCHEMA_MISMATCH"],[6,3,1,"","WRONG_TYPE"],[6,2,1,"","__str__"]],"type_forge.core.ValidationResult":[[6,2,1,"","__bool__"],[6,3,1,"","converted_value"],[6,2,1,"","merge"],[6,3,1,"","valid"],[6,3,1,"","violations"],[6,2,1,"","with_converted_value"]],"type_forge.core.base":[[4,1,1,"","BaseValidator"],[4,1,1,"","TypeForgeBase"],[4,1,1,"","ValidationResult"]],"type_forge.core.base.BaseValidator":[[4,2,1,"","validate"],[4,2,1,"","validate_with_detail"]],"type_forge.core.base.TypeForgeBase":[[4,2,1,"","add_validator"],[4,2,1,"","validate"],[4,2,1,"","validate_with_detail"],[4,3,1,"","validators"]],"type_forge.core.base.ValidationResult":[[4,2,1,"","__bool__"],[4,3,1,"","converted_value"],[4,2,1,"","merge"],[4,3,1,"","valid"],[4,3,1,"","violations"],[4,2,1,"","with_converted_value"]],"type_forge.core.exceptions":[[5,5,1,"","ConfigurationError"],[5,5,1,"","TypeCreationError"],[5,5,1,"","TypeForgeException"],[5,1,1,"","TypeViolation"],[5,1,1,"","TypeViolationKind"],[5,5,1,"","ValidationError"],[5,4,1,"","ViolationKindLiteral"]],"type_forge.core.exceptions.TypeViolation":[[5,2,1,"","__str__"],[5,3,1,"","expected"],[5,3,1,"","found"],[5,3,1,"","kind"],[5,3,1,"","path"]],"type_forge.core.exceptions.TypeViolationKind":[[5,3,1,"","CONVERSION_ERROR"],[5,3,1,"","INVALID_VALUE"],[5,3,1,"","MISSING_KEY"],[5,3,1,"","SCHEMA_MISMATCH"],[5,3,1,"","WRONG_TYPE"],[5,2,1,"","__str__"]],"type_forge.forge":[[7,4,1,"","R"],[7,4,1,"","S"],[7,4,1,"","T"],[7,4,1,"","T_co"],[7,4,1,"","T_contra"],[7,4,1,"","__author__"],[7,4,1,"","__version__"],[7,4,1,"","assert_type"],[7,4,1,"","check_type"],[7,4,1,"","convert_value"],[7,4,1,"","create_type"],[7,4,1,"","safe_convert"],[8,0,0,"-","type_forge"],[7,4,1,"","validate"],[7,4,1,"","validate_and_convert"],[7,4,1,"","validate_dict_schema"],[7,4,1,"","validate_recursive"],[7,4,1,"","validate_type"]],"type_forge.forge.type_forge":[[8,1,1,"","TypeForge"],[8,4,1,"","__author__"],[8,4,1,"","__version__"]],"type_forge.forge.type_forge.TypeForge":[[8,2,1,"","add_validator"],[8,2,1,"","assert_type"],[8,2,1,"","check_type"],[8,2,1,"","convert_value"],[8,2,1,"","create_instance"],[8,2,1,"","create_type"],[8,2,1,"","is_instance"],[8,2,1,"","register_type"],[8,2,1,"","safe_convert"],[8,3,1,"","types"],[8,2,1,"","validate"],[8,2,1,"","validate_and_convert"],[8,2,1,"","validate_dict_schema"],[8,2,1,"","validate_recursive"],[8,2,1,"","validate_type"],[8,2,1,"","validate_with_detail"],[8,3,1,"","validators"]],"type_forge.typing":[[15,4,1,"","CollectionT"],[15,4,1,"","CollectionTypes"],[15,4,1,"","ComparableT"],[15,4,1,"","ComparableT_co"],[15,4,1,"","ComparableT_contra"],[15,1,1,"","CompositeValidator"],[15,1,1,"","ConversionResult"],[15,4,1,"","ConverterMap"],[15,4,1,"","ConverterMapGeneric"],[15,4,1,"","ConverterMapSR"],[15,4,1,"","ConverterPriority"],[15,4,1,"","DictKV"],[15,4,1,"","DictKV_co"],[15,4,1,"","DictSchemaT"],[15,4,1,"","DictSchemaT_co"],[15,4,1,"","DictSchemaT_contra"],[15,4,1,"","ErrorHandler"],[15,4,1,"","ErrorMessage"],[15,4,1,"","FallbackProvider"],[15,4,1,"","FieldDefinitions"],[15,4,1,"","FieldDefinitionsT"],[15,4,1,"","FieldDefinitionsT_co"],[15,4,1,"","FieldDefinitionsT_contra"],[15,4,1,"","FieldsWithDefaults"],[15,4,1,"","FieldsWithDefaultsT"],[15,4,1,"","FrozenSetT"],[15,4,1,"","FrozenSetT_co"],[15,4,1,"","HashableT"],[15,4,1,"","HashableT_co"],[15,4,1,"","HashableT_contra"],[15,4,1,"","IterableT"],[15,4,1,"","IterableT_co"],[15,4,1,"","IteratorT"],[15,4,1,"","IteratorT_co"],[15,4,1,"","K"],[15,4,1,"","K_co"],[15,4,1,"","K_contra"],[15,4,1,"","ListSchemaT"],[15,4,1,"","ListT"],[15,4,1,"","ListT_co"],[15,4,1,"","MappingTypes"],[15,4,1,"","NumericTypes"],[15,4,1,"","OptionalConverter"],[15,4,1,"","ParentSpecType"],[15,4,1,"","ParentSpecType_co"],[15,4,1,"","ParentSpecType_contra"],[15,4,1,"","PathSegmentT"],[15,4,1,"","PathT"],[15,4,1,"","PredicateFunc"],[15,4,1,"","PredicateFunc_contra"],[15,4,1,"","PrimitiveTypes"],[15,4,1,"","R"],[15,4,1,"","R_co"],[15,4,1,"","R_contra"],[15,4,1,"","S"],[15,4,1,"","S_co"],[15,4,1,"","S_contra"],[15,4,1,"","SchemaNodeT"],[15,4,1,"","SchemaSequenceT"],[15,4,1,"","SchemaTypeMappingT"],[15,4,1,"","SchemaTypeT"],[15,4,1,"","SchemaTypeT_co"],[15,4,1,"","SchemaTypeT_contra"],[15,4,1,"","SchemaValueNodeT"],[15,4,1,"","SchemaValueT"],[15,4,1,"","SchemaValueT_co"],[15,4,1,"","SchemaValueT_contra"],[15,4,1,"","SequenceT"],[15,4,1,"","SequenceT_co"],[15,4,1,"","SequenceTypes"],[15,4,1,"","SetT"],[15,4,1,"","SetT_co"],[15,4,1,"","SetTypes"],[15,4,1,"","SingleTypeT"],[15,1,1,"","SupportsBoolConversion"],[15,1,1,"","SupportsComparison"],[15,1,1,"","SupportsEquality"],[15,1,1,"","SupportsFloat"],[15,1,1,"","SupportsFloatConversion"],[15,1,1,"","SupportsGetAttr"],[15,1,1,"","SupportsGetItem"],[15,1,1,"","SupportsInt"],[15,1,1,"","SupportsIntConversion"],[15,1,1,"","SupportsIteration"],[15,1,1,"","SupportsLen"],[15,1,1,"","SupportsLength"],[15,1,1,"","SupportsMapping"],[15,1,1,"","SupportsStrConversion"],[15,1,1,"","SupportsTypeCheck"],[15,4,1,"","T"],[15,4,1,"","TCallable"],[15,4,1,"","TCallable_co"],[15,4,1,"","TCallable_contra"],[15,4,1,"","TCollection"],[15,4,1,"","TCollection_co"],[15,4,1,"","TCollection_contra"],[15,4,1,"","TError"],[15,4,1,"","TError_co"],[15,4,1,"","TError_contra"],[15,4,1,"","TInstance"],[15,4,1,"","TInstance_co"],[15,4,1,"","TInstance_contra"],[15,4,1,"","TValue"],[15,4,1,"","TValue_co"],[15,4,1,"","TValue_contra"],[15,4,1,"","T_co"],[15,4,1,"","T_contra"],[15,4,1,"","TransformFunc"],[15,4,1,"","TransformFunc_co_contra"],[15,4,1,"","TryResult"],[15,4,1,"","TupleT"],[15,4,1,"","TupleT_co"],[15,4,1,"","TypeConverter"],[15,1,1,"","TypeConverterProtocol"],[15,4,1,"","TypeConverterSafe"],[15,1,1,"","TypeDeduplicator"],[15,4,1,"","TypeDistance"],[15,1,1,"","TypeFactory"],[15,1,1,"","TypeForge"],[15,4,1,"","TypeGuardFunc"],[15,4,1,"","TypeGuardFuncT"],[15,4,1,"","TypeHierarchy"],[15,4,1,"","TypeIdentifier"],[15,1,1,"","TypeInfo"],[15,4,1,"","TypeMap"],[15,4,1,"","TypeMapFrom"],[15,4,1,"","TypeMapSR"],[15,4,1,"","TypeMapTo"],[15,4,1,"","TypeMatch"],[15,4,1,"","TypeName"],[15,1,1,"","TypeNormalizer"],[15,4,1,"","TypePath"],[15,4,1,"","TypePrecedence"],[15,4,1,"","TypeRegistry"],[15,1,1,"","TypeRegistryProtocol"],[15,4,1,"","TypeRegistryT"],[15,4,1,"","TypeRegistryT_co"],[15,4,1,"","TypeRegistryT_contra"],[15,4,1,"","TypeRelationship"],[15,1,1,"","TypeRelationshipAnalyzer"],[15,1,1,"","TypeStandardizer"],[15,1,1,"","TypedConverter"],[15,4,1,"","U"],[15,4,1,"","U_co"],[15,4,1,"","U_contra"],[15,4,1,"","UnionTypeT"],[15,4,1,"","V"],[15,4,1,"","V_co"],[15,4,1,"","V_contra"],[15,4,1,"","ValidationContext"],[15,4,1,"","ValidationFunc"],[15,4,1,"","ValidationFuncT"],[15,4,1,"","ValidationFuncT_contra"],[15,1,1,"","ValidationIssue"],[15,4,1,"","ValidationOptions"],[15,4,1,"","ValidationPath"],[15,1,1,"","ValidationReport"],[15,4,1,"","ValidationResult"],[15,4,1,"","ValidationResultT"],[15,4,1,"","ValidationStrategy"],[15,4,1,"","ValidationWithPath"],[15,1,1,"","Validator"],[10,0,0,"-","aliases"],[11,0,0,"-","analysis"],[15,6,1,"","coerce_to_type"],[12,0,0,"-","conversion"],[15,6,1,"","convert_with_fallback"],[15,6,1,"","deduplicate_types"],[13,0,0,"-","definitions"],[15,6,1,"","describe_type"],[15,6,1,"","get_common_supertype"],[15,6,1,"","get_python_type_for_name"],[15,6,1,"","get_standardized_type_name"],[15,6,1,"","get_type_category"],[15,6,1,"","get_type_hierarchy"],[15,6,1,"","get_type_name"],[15,6,1,"","has_attributes"],[14,0,0,"-","hints"],[15,6,1,"","is_abstract_type"],[15,6,1,"","is_callable"],[15,6,1,"","is_collection"],[15,6,1,"","is_compatible_with_type"],[15,6,1,"","is_function"],[15,6,1,"","is_generic_type"],[15,6,1,"","is_instance_of_any"],[15,6,1,"","is_method"],[15,6,1,"","is_non_empty_string"],[15,6,1,"","is_numeric"],[15,6,1,"","is_primitive_type"],[15,6,1,"","is_protocol_instance"],[15,6,1,"","is_subclass_safe"],[15,6,1,"","is_valid_identifier"],[16,0,0,"-","mapping"],[17,0,0,"-","naming"],[18,0,0,"-","protocols"],[15,6,1,"","safe_bool_convert"],[15,6,1,"","safe_float_convert"],[15,6,1,"","safe_int_convert"],[15,6,1,"","safe_str_convert"],[19,0,0,"-","standardization"],[15,6,1,"","standardize_type_name"],[15,6,1,"","try_convert"],[20,0,0,"-","validation"],[21,0,0,"-","variables"]],"type_forge.typing.CompositeValidator":[[15,2,1,"","add_validator"],[15,2,1,"","validate"]],"type_forge.typing.ConversionResult":[[15,2,1,"","__bool__"],[15,2,1,"","__repr__"],[15,2,1,"","__str__"],[15,2,1,"","create_success"],[15,3,1,"","error"],[15,2,1,"","failure"],[15,2,1,"","from_try"],[15,2,1,"","map"],[15,2,1,"","or_else"],[15,2,1,"","or_else_get"],[15,2,1,"","or_raise"],[15,2,1,"","recover"],[15,3,1,"","success"],[15,2,1,"","then"],[15,3,1,"","value"]],"type_forge.typing.SupportsBoolConversion":[[15,2,1,"","__bool__"]],"type_forge.typing.SupportsComparison":[[15,2,1,"","__lt__"]],"type_forge.typing.SupportsEquality":[[15,2,1,"","__eq__"],[15,2,1,"","__ne__"]],"type_forge.typing.SupportsFloat":[[15,2,1,"","__float__"]],"type_forge.typing.SupportsFloatConversion":[[15,2,1,"","__float__"]],"type_forge.typing.SupportsGetAttr":[[15,2,1,"","__getattr__"]],"type_forge.typing.SupportsGetItem":[[15,2,1,"","__getitem__"]],"type_forge.typing.SupportsInt":[[15,2,1,"","__int__"]],"type_forge.typing.SupportsIntConversion":[[15,2,1,"","__int__"]],"type_forge.typing.SupportsIteration":[[15,2,1,"","__iter__"]],"type_forge.typing.SupportsLen":[[15,2,1,"","__len__"]],"type_forge.typing.SupportsLength":[[15,2,1,"","__len__"]],"type_forge.typing.SupportsMapping":[[15,2,1,"","__contains__"],[15,2,1,"","__getitem__"],[15,2,1,"","__setitem__"]],"type_forge.typing.SupportsStrConversion":[[15,2,1,"","__str__"]],"type_forge.typing.SupportsTypeCheck":[[15,2,1,"","is_type"]],"type_forge.typing.TypeConverterProtocol":[[15,2,1,"","convert"]],"type_forge.typing.TypeDeduplicator":[[15,2,1,"","deduplicate"]],"type_forge.typing.TypeFactory":[[15,2,1,"","create"]],"type_forge.typing.TypeForge":[[15,2,1,"","forge"]],"type_forge.typing.TypeInfo":[[15,2,1,"","get_attributes"],[15,2,1,"","get_name"],[15,2,1,"","is_subtype_of"]],"type_forge.typing.TypeNormalizer":[[15,2,1,"","normalize"]],"type_forge.typing.TypeRegistryProtocol":[[15,2,1,"","lookup"],[15,2,1,"","register"]],"type_forge.typing.TypeRelationshipAnalyzer":[[15,2,1,"","find_common_supertype"],[15,2,1,"","get_conversion_distance"],[15,2,1,"","get_relationship"],[15,2,1,"","is_convertible"]],"type_forge.typing.TypeStandardizer":[[15,2,1,"","standardize"]],"type_forge.typing.TypedConverter":[[15,2,1,"","convert"]],"type_forge.typing.ValidationIssue":[[15,2,1,"","__str__"],[15,3,1,"","context"],[15,2,1,"","is_blocker"],[15,2,1,"","is_error"],[15,3,1,"","message"],[15,3,1,"","path"],[15,3,1,"","severity"]],"type_forge.typing.ValidationReport":[[15,2,1,"","__bool__"],[15,2,1,"","__str__"],[15,2,1,"","add_error"],[15,2,1,"","add_info"],[15,2,1,"","add_issue"],[15,2,1,"","add_warning"],[15,2,1,"","can_proceed"],[15,2,1,"","get_errors"],[15,2,1,"","get_issues"],[15,2,1,"","get_warnings"],[15,2,1,"","has_warnings"],[15,2,1,"","is_valid"],[15,3,1,"","issues"]],"type_forge.typing.Validator":[[15,2,1,"","validate"]],"type_forge.typing.aliases":[[10,4,1,"","ClassType"],[10,4,1,"","ClassType_co"],[10,4,1,"","ClassType_contra"],[10,4,1,"","CollectionTypes"],[10,4,1,"","ConverterMap"],[10,4,1,"","ConverterMapGeneric"],[10,4,1,"","ConverterMapSR"],[10,4,1,"","ConverterPriority"],[10,4,1,"","DictKV"],[10,4,1,"","DictKV_co"],[10,4,1,"","DictSchemaT"],[10,4,1,"","DictSchemaT_co"],[10,4,1,"","DictSchemaT_contra"],[10,4,1,"","ErrorHandler"],[10,4,1,"","ErrorMessage"],[10,4,1,"","FallbackProvider"],[10,4,1,"","FieldDefinitions"],[10,4,1,"","FieldDefinitionsT"],[10,4,1,"","FieldDefinitionsT_co"],[10,4,1,"","FieldDefinitionsT_contra"],[10,4,1,"","FieldsWithDefaults"],[10,4,1,"","FieldsWithDefaultsT"],[10,4,1,"","FrozenSetT"],[10,4,1,"","FrozenSetT_co"],[10,4,1,"","IdentityTypes"],[10,4,1,"","IterableT"],[10,4,1,"","IterableT_co"],[10,4,1,"","IteratorT"],[10,4,1,"","IteratorT_co"],[10,4,1,"","ListT"],[10,4,1,"","ListT_co"],[10,4,1,"","MappingTypes"],[10,4,1,"","NumericTypes"],[10,4,1,"","OptionalConverter"],[10,4,1,"","ParentSpecType"],[10,4,1,"","ParentSpecType_co"],[10,4,1,"","ParentSpecType_contra"],[10,4,1,"","PredicateFunc"],[10,4,1,"","PredicateFunc_contra"],[10,4,1,"","PrimitiveTypes"],[10,4,1,"","SchemaTypeT"],[10,4,1,"","SchemaTypeT_co"],[10,4,1,"","SchemaTypeT_contra"],[10,4,1,"","SchemaValueT"],[10,4,1,"","SchemaValueT_co"],[10,4,1,"","SchemaValueT_contra"],[10,4,1,"","SequenceT"],[10,4,1,"","SequenceT_co"],[10,4,1,"","SequenceTypes"],[10,4,1,"","SetT"],[10,4,1,"","SetT_co"],[10,4,1,"","SetTypes"],[10,4,1,"","TextTypes"],[10,4,1,"","TransformFunc"],[10,4,1,"","TransformFunc_co_contra"],[10,4,1,"","TryResult"],[10,4,1,"","TupleT"],[10,4,1,"","TupleT_co"],[10,4,1,"","TypeConverter"],[10,4,1,"","TypeConverterSafe"],[10,4,1,"","TypeDistance"],[10,4,1,"","TypeGuardFunc"],[10,4,1,"","TypeGuardFuncT"],[10,4,1,"","TypeHierarchy"],[10,4,1,"","TypeIdentifier"],[10,4,1,"","TypeMap"],[10,4,1,"","TypeMapFrom"],[10,4,1,"","TypeMapSR"],[10,4,1,"","TypeMapTo"],[10,4,1,"","TypeMatch"],[10,4,1,"","TypeName"],[10,4,1,"","TypePath"],[10,4,1,"","TypePrecedence"],[10,4,1,"","TypeRegistry"],[10,4,1,"","TypeRegistryT"],[10,4,1,"","TypeRegistryT_co"],[10,4,1,"","TypeRegistryT_contra"],[10,4,1,"","TypeRelationship"],[10,4,1,"","ValidationChain"],[10,4,1,"","ValidationContext"],[10,4,1,"","ValidationFunc"],[10,4,1,"","ValidationFuncT"],[10,4,1,"","ValidationFuncT_contra"],[10,4,1,"","ValidationOptions"],[10,4,1,"","ValidationPath"],[10,4,1,"","ValidationResult"],[10,4,1,"","ValidationResultT"],[10,4,1,"","ValidationStrategy"],[10,4,1,"","ValidationWithPath"]],"type_forge.typing.analysis":[[11,1,1,"","TypeRelationshipAnalyzer"]],"type_forge.typing.analysis.TypeRelationshipAnalyzer":[[11,2,1,"","find_common_supertype"],[11,2,1,"","get_conversion_distance"],[11,2,1,"","get_relationship"],[11,2,1,"","is_convertible"]],"type_forge.typing.conversion":[[12,1,1,"","ConversionResult"],[12,4,1,"","ConvertibleToBool"],[12,4,1,"","ConvertibleToFloat"],[12,4,1,"","ConvertibleToInt"],[12,4,1,"","ConvertibleToStr"],[12,4,1,"","_TYPE_CONVERTERS"],[12,6,1,"","coerce_to_type"],[12,6,1,"","convert_with_fallback"],[12,6,1,"","register_converter"],[12,6,1,"","safe_bool_convert"],[12,6,1,"","safe_float_convert"],[12,6,1,"","safe_int_convert"],[12,6,1,"","safe_str_convert"],[12,6,1,"","try_convert"],[12,4,1,"","version"]],"type_forge.typing.conversion.ConversionResult":[[12,2,1,"","__bool__"],[12,2,1,"","__repr__"],[12,2,1,"","__str__"],[12,2,1,"","create_success"],[12,3,1,"","error"],[12,2,1,"","failure"],[12,2,1,"","from_try"],[12,2,1,"","map"],[12,2,1,"","or_else"],[12,2,1,"","or_else_get"],[12,2,1,"","or_raise"],[12,2,1,"","recover"],[12,3,1,"","success"],[12,2,1,"","then"],[12,3,1,"","value"]],"type_forge.typing.definitions":[[13,1,1,"","TypeCategory"],[13,1,1,"","TypeCompatibility"],[13,1,1,"","ValidationLevel"],[13,1,1,"","ValidationSeverity"],[13,4,1,"","version"]],"type_forge.typing.definitions.TypeCategory":[[13,3,1,"","ATOMIC"],[13,3,1,"","BINARY"],[13,3,1,"","BOOLEAN"],[13,3,1,"","COMPOSITE"],[13,3,1,"","CONTAINER"],[13,3,1,"","DATETIME"],[13,3,1,"","ENUM"],[13,3,1,"","FUNCTION"],[13,3,1,"","GENERIC"],[13,3,1,"","NETWORK"],[13,3,1,"","NUMERIC"],[13,3,1,"","PROTOCOL"],[13,3,1,"","RECURSIVE"],[13,3,1,"","SPECIAL"],[13,3,1,"","STRUCTURAL"],[13,3,1,"","TEXT"],[13,2,1,"","__str__"]],"type_forge.typing.definitions.TypeCompatibility":[[13,3,1,"","CONTAINER_COMPATIBLE"],[13,3,1,"","CONVERTIBLE"],[13,3,1,"","IDENTICAL"],[13,3,1,"","IMPLICIT_CONVERTIBLE"],[13,3,1,"","INCOMPATIBLE"],[13,3,1,"","PROTOCOL_COMPATIBLE"],[13,3,1,"","STRUCTURALLY_COMPATIBLE"],[13,3,1,"","SUBTYPE"],[13,3,1,"","SUPERTYPE"],[13,2,1,"","__str__"],[13,2,1,"","is_compatible"]],"type_forge.typing.definitions.ValidationLevel":[[13,3,1,"","CONTRAVARIANT"],[13,3,1,"","COVARIANT"],[13,3,1,"","DYNAMIC"],[13,3,1,"","NONE"],[13,3,1,"","PERMISSIVE"],[13,3,1,"","STANDARD"],[13,3,1,"","STRICT"],[13,3,1,"","STRUCTURAL"],[13,2,1,"","__str__"]],"type_forge.typing.definitions.ValidationSeverity":[[13,3,1,"","DEBUG"],[13,3,1,"","ERROR"],[13,3,1,"","FATAL"],[13,3,1,"","INFO"],[13,3,1,"","WARNING"],[13,2,1,"","__str__"],[13,2,1,"","is_blocker"],[13,2,1,"","is_error"]],"type_forge.typing.hints":[[14,4,1,"","CollectionT"],[14,4,1,"","DictSchemaT"],[14,4,1,"","ListSchemaT"],[14,4,1,"","PathSegmentT"],[14,4,1,"","PathT"],[14,4,1,"","SchemaNodeT"],[14,4,1,"","SchemaSequenceT"],[14,4,1,"","SchemaTypeMappingT"],[14,4,1,"","SchemaTypeT"],[14,4,1,"","SchemaValueNodeT"],[14,4,1,"","SchemaValueT"],[14,4,1,"","SingleTypeT"],[14,4,1,"","UnionTypeT"],[14,4,1,"","ValidationResultT"]],"type_forge.typing.mapping":[[16,4,1,"","MaybeType"],[16,4,1,"","T"],[16,4,1,"","TypeDescription"],[16,4,1,"","TypeName"],[16,4,1,"","TypeObject"],[16,4,1,"","U"],[16,6,1,"","describe_type"],[16,6,1,"","get_common_supertype"],[16,6,1,"","get_python_type_for_name"],[16,6,1,"","get_type_category"],[16,6,1,"","get_type_name"],[16,4,1,"","version"]],"type_forge.typing.naming":[[17,4,1,"","CALLABLE_CATEGORY"],[17,4,1,"","COMPOSITE_CATEGORY"],[17,4,1,"","CONTAINER_CATEGORY"],[17,4,1,"","PRIMITIVE_CATEGORY"],[17,4,1,"","SPECIAL_CATEGORY"],[17,4,1,"","T"],[17,4,1,"","TypeCategoryLiteral"],[17,1,1,"","TypeProtocol"],[17,4,1,"","U"],[17,4,1,"","V"],[17,4,1,"","_NONE_TYPE"],[17,6,1,"","are_types_compatible"],[17,6,1,"","describe_type"],[17,6,1,"","format_type_annotation"],[17,6,1,"","get_fully_qualified_name"],[17,6,1,"","get_generic_args"],[17,6,1,"","get_type_category"],[17,6,1,"","get_type_name"],[17,6,1,"","is_container_type"],[17,6,1,"","is_generic_type"],[17,6,1,"","is_optional_type"],[17,6,1,"","is_primitive_type"],[17,6,1,"","normalize_type"],[17,4,1,"","version"]],"type_forge.typing.naming.TypeProtocol":[[17,3,1,"","__module__"],[17,3,1,"","__name__"],[17,3,1,"","__qualname__"]],"type_forge.typing.protocols":[[18,1,1,"","CompositeValidator"],[18,1,1,"","SupportsBoolConversion"],[18,1,1,"","SupportsComparison"],[18,1,1,"","SupportsEquality"],[18,1,1,"","SupportsFloat"],[18,1,1,"","SupportsFloatConversion"],[18,1,1,"","SupportsGetAttr"],[18,1,1,"","SupportsGetItem"],[18,1,1,"","SupportsInt"],[18,1,1,"","SupportsIntConversion"],[18,1,1,"","SupportsIteration"],[18,1,1,"","SupportsLen"],[18,1,1,"","SupportsLength"],[18,1,1,"","SupportsMapping"],[18,1,1,"","SupportsStrConversion"],[18,1,1,"","SupportsTypeCheck"],[18,1,1,"","TypeConverter"],[18,1,1,"","TypeDeduplicator"],[18,1,1,"","TypeFactory"],[18,1,1,"","TypeForge"],[18,1,1,"","TypeInfo"],[18,1,1,"","TypeNormalizer"],[18,1,1,"","TypeRegistry"],[18,1,1,"","TypeStandardizer"],[18,1,1,"","TypedConverter"],[18,1,1,"","Validator"],[18,4,1,"","version"]],"type_forge.typing.protocols.CompositeValidator":[[18,2,1,"","add_validator"],[18,2,1,"","validate"]],"type_forge.typing.protocols.SupportsBoolConversion":[[18,2,1,"","__bool__"]],"type_forge.typing.protocols.SupportsComparison":[[18,2,1,"","__lt__"]],"type_forge.typing.protocols.SupportsEquality":[[18,2,1,"","__eq__"],[18,2,1,"","__ne__"]],"type_forge.typing.protocols.SupportsFloat":[[18,2,1,"","__float__"]],"type_forge.typing.protocols.SupportsFloatConversion":[[18,2,1,"","__float__"]],"type_forge.typing.protocols.SupportsGetAttr":[[18,2,1,"","__getattr__"]],"type_forge.typing.protocols.SupportsGetItem":[[18,2,1,"","__getitem__"]],"type_forge.typing.protocols.SupportsInt":[[18,2,1,"","__int__"]],"type_forge.typing.protocols.SupportsIntConversion":[[18,2,1,"","__int__"]],"type_forge.typing.protocols.SupportsIteration":[[18,2,1,"","__iter__"]],"type_forge.typing.protocols.SupportsLen":[[18,2,1,"","__len__"]],"type_forge.typing.protocols.SupportsLength":[[18,2,1,"","__len__"]],"type_forge.typing.protocols.SupportsMapping":[[18,2,1,"","__contains__"],[18,2,1,"","__getitem__"],[18,2,1,"","__setitem__"]],"type_forge.typing.protocols.SupportsStrConversion":[[18,2,1,"","__str__"]],"type_forge.typing.protocols.SupportsTypeCheck":[[18,2,1,"","is_type"]],"type_forge.typing.protocols.TypeConverter":[[18,2,1,"","convert"]],"type_forge.typing.protocols.TypeDeduplicator":[[18,2,1,"","deduplicate"]],"type_forge.typing.protocols.TypeFactory":[[18,2,1,"","create"]],"type_forge.typing.protocols.TypeForge":[[18,2,1,"","forge"]],"type_forge.typing.protocols.TypeInfo":[[18,2,1,"","get_attributes"],[18,2,1,"","get_name"],[18,2,1,"","is_subtype_of"]],"type_forge.typing.protocols.TypeNormalizer":[[18,2,1,"","normalize"]],"type_forge.typing.protocols.TypeRegistry":[[18,2,1,"","lookup"],[18,2,1,"","register"]],"type_forge.typing.protocols.TypeStandardizer":[[18,2,1,"","standardize"]],"type_forge.typing.protocols.TypedConverter":[[18,2,1,"","convert"]],"type_forge.typing.protocols.Validator":[[18,2,1,"","validate"]],"type_forge.typing.standardization":[[19,6,1,"","deduplicate_types"],[19,6,1,"","get_common_supertype"],[19,6,1,"","get_type_hierarchy"],[19,6,1,"","is_abstract_type"],[19,6,1,"","is_generic_type"],[19,6,1,"","standardize_type_name"],[19,4,1,"","version"]],"type_forge.typing.validation":[[20,1,1,"","ValidationIssue"],[20,1,1,"","ValidationReport"],[20,6,1,"","are_types_compatible"],[20,6,1,"","has_attributes"],[20,6,1,"","is_callable"],[20,6,1,"","is_collection"],[20,6,1,"","is_compatible_with_type"],[20,6,1,"","is_function"],[20,6,1,"","is_instance_of_any"],[20,6,1,"","is_method"],[20,6,1,"","is_non_empty_string"],[20,6,1,"","is_numeric"],[20,6,1,"","is_protocol_instance"],[20,6,1,"","is_subclass_safe"],[20,6,1,"","is_valid_identifier"],[20,4,1,"","version"]],"type_forge.typing.validation.ValidationIssue":[[20,2,1,"","__str__"],[20,3,1,"","context"],[20,2,1,"","is_blocker"],[20,2,1,"","is_error"],[20,3,1,"","message"],[20,3,1,"","path"],[20,3,1,"","severity"]],"type_forge.typing.validation.ValidationReport":[[20,2,1,"","__bool__"],[20,2,1,"","__str__"],[20,2,1,"","add_error"],[20,2,1,"","add_info"],[20,2,1,"","add_issue"],[20,2,1,"","add_warning"],[20,2,1,"","can_proceed"],[20,2,1,"","get_errors"],[20,2,1,"","get_issues"],[20,2,1,"","get_warnings"],[20,2,1,"","has_warnings"],[20,2,1,"","is_valid"],[20,3,1,"","issues"]],"type_forge.typing.variables":[[21,4,1,"","ComparableT"],[21,4,1,"","ComparableT_co"],[21,4,1,"","ComparableT_contra"],[21,4,1,"","HashableT"],[21,4,1,"","HashableT_co"],[21,4,1,"","HashableT_contra"],[21,4,1,"","K"],[21,4,1,"","K_co"],[21,4,1,"","K_contra"],[21,4,1,"","R"],[21,4,1,"","R_co"],[21,4,1,"","R_contra"],[21,4,1,"","S"],[21,4,1,"","S_co"],[21,4,1,"","S_contra"],[21,4,1,"","T"],[21,4,1,"","TCallable"],[21,4,1,"","TCallable_co"],[21,4,1,"","TCallable_contra"],[21,4,1,"","TCollection"],[21,4,1,"","TCollection_co"],[21,4,1,"","TCollection_contra"],[21,4,1,"","TError"],[21,4,1,"","TError_co"],[21,4,1,"","TError_contra"],[21,4,1,"","TInstance"],[21,4,1,"","TInstance_co"],[21,4,1,"","TInstance_contra"],[21,4,1,"","TValue"],[21,4,1,"","TValue_co"],[21,4,1,"","TValue_contra"],[21,4,1,"","T_co"],[21,4,1,"","T_contra"],[21,4,1,"","U"],[21,4,1,"","U_co"],[21,4,1,"","U_contra"],[21,4,1,"","V"],[21,4,1,"","V_co"],[21,4,1,"","V_contra"],[21,4,1,"","version"]],"type_forge.utils":[[22,0,0,"-","collection_manipulation"],[24,0,0,"-","string_format"]],"type_forge.utils.collection_manipulation":[[22,6,1,"","deduplicate_list"],[22,6,1,"","filter_dict"],[22,6,1,"","flatten_list"],[22,6,1,"","group_by_key"],[22,6,1,"","partition_list"],[22,6,1,"","transpose_dict_of_lists"]],"type_forge.utils.string_format":[[24,6,1,"","camel_to_snake"],[24,6,1,"","format_message"],[24,6,1,"","format_type_name"],[24,6,1,"","pluralize"],[24,6,1,"","snake_to_camel"],[24,6,1,"","standardize_typename"]],"type_forge.validators":[[28,1,1,"id0","BaseValidator"],[28,1,1,"id3","BasicValidator"],[28,1,1,"id16","CompositeValidator"],[28,4,1,"","DictSchemaT"],[28,4,1,"","ParentSpecType"],[28,4,1,"","SchemaTypeT"],[28,1,1,"","SupportsBoolConversion"],[28,1,1,"","SupportsFloat"],[28,1,1,"","SupportsFloatConversion"],[28,1,1,"","SupportsInt"],[28,1,1,"","SupportsIntConversion"],[28,4,1,"id105","T"],[28,1,1,"id40","TypeViolation"],[28,1,1,"id74","TypeViolationKind"],[28,4,1,"","V"],[28,1,1,"","ValidationIssue"],[28,1,1,"","ValidationReport"],[28,1,1,"id96","ValidationResult"],[28,1,1,"","ValidatorFactory"],[28,6,1,"","are_types_compatible"],[25,0,0,"-","basic"],[26,0,0,"-","composite"],[27,0,0,"-","factory"],[28,6,1,"","has_attributes"],[28,6,1,"","is_callable"],[28,6,1,"","is_collection"],[28,6,1,"","is_compatible_with_type"],[28,6,1,"","is_function"],[28,6,1,"","is_in_range"],[28,6,1,"","is_instance_of_any"],[28,6,1,"","is_method"],[28,6,1,"","is_non_empty_string"],[28,6,1,"","is_not_empty"],[28,6,1,"","is_numeric"],[28,6,1,"","is_positive"],[28,6,1,"","is_protocol_instance"],[28,6,1,"","is_subclass_safe"],[28,6,1,"","is_valid_identifier"],[28,6,1,"","is_valid_length"],[28,4,1,"","version"]],"type_forge.validators.BaseValidator":[[28,2,1,"id1","validate"],[28,2,1,"id2","validate_with_detail"]],"type_forge.validators.BasicValidator":[[28,2,1,"id4","safe_bool_convert"],[28,2,1,"id5","safe_float_convert"],[28,2,1,"id6","safe_int_convert"],[28,2,1,"id7","safe_str_convert"],[28,2,1,"id8","validate"],[28,2,1,"id9","validate_boolean"],[28,2,1,"id10","validate_dict"],[28,2,1,"id11","validate_float"],[28,2,1,"id12","validate_integer"],[28,2,1,"id13","validate_list"],[28,2,1,"id14","validate_string"],[28,2,1,"id15","validate_with_detail"]],"type_forge.validators.CompositeValidator":[[28,2,1,"id17","__call__"],[28,2,1,"id18","add_validator"],[28,2,1,"id19","from_validators"],[28,2,1,"id20","validate"],[28,2,1,"id21","validate_with_detail"],[28,2,1,"id22","validate_with_details"],[28,3,1,"id23","validators"]],"type_forge.validators.SupportsBoolConversion":[[28,2,1,"","__bool__"]],"type_forge.validators.SupportsFloat":[[28,2,1,"","__float__"]],"type_forge.validators.SupportsFloatConversion":[[28,2,1,"","__float__"]],"type_forge.validators.SupportsInt":[[28,2,1,"","__int__"]],"type_forge.validators.SupportsIntConversion":[[28,2,1,"","__int__"]],"type_forge.validators.TypeViolation":[[28,2,1,"id46","__str__"],[28,3,1,"id47","expected"],[28,3,1,"id48","found"],[28,3,1,"id49","kind"],[28,3,1,"id50","path"]],"type_forge.validators.TypeViolationKind":[[28,3,1,"id84","CONVERSION_ERROR"],[28,3,1,"id85","INVALID_VALUE"],[28,3,1,"id86","MISSING_KEY"],[28,3,1,"id87","SCHEMA_MISMATCH"],[28,3,1,"id88","WRONG_TYPE"],[28,2,1,"id83","__str__"]],"type_forge.validators.ValidationIssue":[[28,2,1,"","__str__"],[28,3,1,"","context"],[28,2,1,"","is_blocker"],[28,2,1,"","is_error"],[28,3,1,"","message"],[28,3,1,"","path"],[28,3,1,"","severity"]],"type_forge.validators.ValidationReport":[[28,2,1,"","__bool__"],[28,2,1,"","__str__"],[28,2,1,"","add_error"],[28,2,1,"","add_info"],[28,2,1,"","add_issue"],[28,2,1,"","add_warning"],[28,2,1,"","can_proceed"],[28,2,1,"","get_errors"],[28,2,1,"","get_issues"],[28,2,1,"","get_warnings"],[28,2,1,"","has_warnings"],[28,2,1,"","is_valid"],[28,3,1,"","issues"]],"type_forge.validators.ValidationResult":[[28,2,1,"id97","__bool__"],[28,3,1,"id100","converted_value"],[28,2,1,"id98","merge"],[28,3,1,"id101","valid"],[28,3,1,"id102","violations"],[28,2,1,"id99","with_converted_value"]],"type_forge.validators.ValidatorFactory":[[28,2,1,"","_get_type_name"],[28,2,1,"","_try_convert"],[28,2,1,"","create_validator"],[28,2,1,"","validate_dict"],[28,2,1,"","validate_recursive"],[28,2,1,"","validate_type"]],"type_forge.validators.basic":[[25,1,1,"","BasicValidator"],[25,4,1,"","T"]],"type_forge.validators.basic.BasicValidator":[[25,2,1,"","safe_bool_convert"],[25,2,1,"","safe_float_convert"],[25,2,1,"","safe_int_convert"],[25,2,1,"","safe_str_convert"],[25,2,1,"","validate"],[25,2,1,"","validate_boolean"],[25,2,1,"","validate_dict"],[25,2,1,"","validate_float"],[25,2,1,"","validate_integer"],[25,2,1,"","validate_list"],[25,2,1,"","validate_string"],[25,2,1,"","validate_with_detail"]],"type_forge.validators.composite":[[26,1,1,"","CompositeValidator"],[26,4,1,"","T"],[26,6,1,"","is_in_range"],[26,6,1,"","is_not_empty"],[26,6,1,"","is_positive"],[26,6,1,"","is_valid_length"]],"type_forge.validators.composite.CompositeValidator":[[26,2,1,"","__call__"],[26,2,1,"","add_validator"],[26,2,1,"","from_validators"],[26,2,1,"","validate"],[26,2,1,"","validate_with_detail"],[26,2,1,"","validate_with_details"],[26,3,1,"","validators"]],"type_forge.validators.factory":[[27,4,1,"","V"],[27,1,1,"","ValidatorFactory"]],"type_forge.validators.factory.ValidatorFactory":[[27,2,1,"","_get_type_name"],[27,2,1,"","_try_convert"],[27,2,1,"","create_validator"],[27,2,1,"","validate_dict"],[27,2,1,"","validate_recursive"],[27,2,1,"","validate_type"]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","attribute","Python attribute"],"4":["py","data","Python data"],"5":["py","exception","Python exception"],"6":["py","function","Python function"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:method","3":"py:attribute","4":"py:data","5":"py:exception","6":"py:function"},"terms":{"":[0,2,4,6,7,8,9,10,11,12,13,15,16,20,21,22,25,27,28,30,31],"0":[5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,28,29,30],"0x10":[12,15],"1":[2,3,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,28],"10":[0,11,15],"100":2,"120":[15,20,28,29],"123":[12,15,20,28],"123invalid":[15,20,28],"14":[12,15,18,20,28],"15":[11,15],"2":[10,11,12,14,15,16,18,20,22,28,30],"20":29,"25":[8,14,15,22],"2j":[15,20,28],"3":[11,12,14,15,16,17,18,20,22,28,31],"30":[8,9,14,15,18,22,27,28,29],"35":[14,15],"4":[22,30],"42":[2,4,6,7,8,9,12,14,15,16,18,20,27,28,31],"484":[15,19],"5":[2,5,6,9,11,15,18,22,28],"50":2,"60":[15,20,28],"7":[11,15,31],"72":24,"75":2,"8":[12,15],"84":[12,15],"9":[15,17,18],"99":[12,15],"A":[1,4,6,8,9,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28],"At":8,"By":[2,29,30],"For":[1,2,8,12,15,16,17,18,20,22,28,29,31,32],"If":[4,6,8,12,15,18,20,25,27,28,31],"In":29,"It":[0,1,4,6,8,9,11,12,15,17,19,26,28],"No":[4,6,10,13,15,26,28],"The":[0,1,2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,24,25,26,27,28,29,32],"These":[8,14,16,17,18,19,20,22],"To":[0,30,32],"Will":8,"With":8,"_":[12,15],"__author__":[7,8],"__bool__":[4,6,9,12,15,18,20,28],"__call__":[26,28],"__contains__":[15,18],"__eq__":[12,15,18],"__float__":[15,18,28],"__getattr__":[15,18],"__getitem__":[15,18],"__hash__":22,"__init__":[8,12,15,18,28,30],"__int__":[15,18,28],"__iter__":[15,18],"__len__":[15,18,20,28],"__lt__":[15,18],"__module__":17,"__name__":[12,17],"__ne__":[15,18],"__private_var":24,"__privatevar":24,"__qualname__":17,"__repr__":[12,15],"__setitem__":[15,18],"__str__":[5,6,9,12,13,15,18,20,28],"__version__":[7,8],"_convert":[12,15],"_data":[15,18],"_get_type_nam":[27,28],"_none_typ":17,"_privat":[15,20,28],"_registri":[15,18],"_try_convert":[27,28],"_type_convert":12,"abc":[11,15,16,19],"abc123":[5,6,9,28],"about":[1,6,8,13,15,16,18,20,28],"abov":29,"absent":[5,6,9,28],"abstract":[4,6,7,10,15,19,28],"abstractexampl":[15,19],"abstractmethod":[15,19],"accept":[10,13,15,18],"access":[6,8,10,14,15,18,28],"accord":[15,18,20,28],"accur":[5,6],"across":[7,11,15,16,17,19,22,24],"act":[4,6,9,28],"actual":[5,6,9,12,14,15,20,28],"ad":[0,4,6,15,18],"adapt":[0,10,15],"add":[4,6,8,15,18,20,26,28],"add_error":[15,20,28],"add_info":[15,20,28],"add_issu":[15,20,28],"add_valid":[4,6,8,15,18,26,28],"add_warn":[15,20,28],"addit":[15,16,20,27,28],"address":[5,6,9,10,13,14,15,20,28],"adher":[0,4,6,28,30],"advanc":[0,2,7,10,14,15,29],"affect":[9,10,15],"after":[4,6,8],"ag":[5,6,8,9,14,15,18,22,27,28,29],"against":[4,6,7,8,10,14,15,17,18,20,27,28],"age_valid":29,"aggreg":[4,6,8,26,28],"algorithm":22,"alia":10,"alias":[3,14,15,17,20,24,28],"alic":[8,9,14,15,18,22,27,28],"all":[4,5,6,7,8,11,12,13,15,16,18,19,20,22,26,27,28],"allow":[0,1,2,4,6,8,9,10,12,13,14,15,18,20,26,28,29,30,32],"alreadi":8,"also":[4,6,15,20,26,28,30],"altern":[14,15,28],"alwai":[12,15],"ambigu":[0,10,15],"an":[0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31],"analysi":[3,10,15,16,17,19],"analyz":[7,11,15,16,17,19,20,22,28],"ancestor":[15,16],"andvalid":[15,18],"ani":[4,5,6,8,9,10,11,12,14,15,17,20,25,26,28,31],"annot":[10,15,16,17,19],"anoth":[4,6,9,12,15,18,20,28],"any_attr":[15,20,28],"api":[8,10,15,31],"append":[4,6,8,15,18,20,28],"appl":22,"appli":[4,6,7,8,24,30],"applic":[2,13,27,28,30],"approach":[10,15],"appropri":[4,6,10,13,15,16,26,28],"ar":[2,8,10,11,12,13,15,17,18,19,20,22,24,28,29],"arbitrari":[8,10,14,15,27,28],"arbitrarili":8,"architectur":[0,6],"are_types_compat":[17,20,28],"aren":5,"arg":[5,6,8,9,13,15,18,28],"argument":[8,10,15,17,18,20,28],"arithmet":[10,15],"around":[15,20,28],"arrai":[14,15,28],"assert":[6,7,8,15],"assert_typ":[7,8],"assess":11,"assign":[20,28],"associ":[8,9,10,15,18,24],"assum":30,"atom":[4,13,15,16],"attempt":[5,6,8,12,13,15,20,27,28],"attribut":[4,6],"attributeerror":[15,18],"author":7,"auto":3,"autoapi":3,"automat":[11,15],"avail":[1,2,8,28,32],"awar":[10,14,15],"b":[12,13,15,16,22],"back":[12,15],"backbon":6,"bad":[12,15],"balanc":[4,6,8],"banana":22,"base":[2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,22,25,26,27,28,30],"basevalid":[2,4,6,8,25,26,28,30],"basi":[11,15],"basic":[0,3,7,8,10,13,15,17,27,28,31,32],"basicvalid":[9,25,28],"becom":8,"been":10,"befor":[4,6,31],"begin":31,"behavior":[4,6,8,10,13,15,16,18],"being":[14,15,17,18,20,28],"below":[0,30],"besid":19,"best":13,"better":[4,6,8,9,14,15,28],"between":[7,10,11,13,15,16,17,18,20,28],"beyond":[13,16,19,24],"binari":[12,13,15],"block":[4,13,15,20,28],"bob":[8,14,15,22,27,28],"bool":[4,6,8,9,10,11,12,13,14,15,17,18,19,20,22,24,25,26,27,28,30],"bool_hierarchi":[15,19],"boolean":[4,6,8,9,10,11,12,13,15,18,20,24,25,26,28],"both":[4,6,9,10,12,15,16,17,19,20,27,28,29,30],"bound":[8,15,16,20,28],"boundari":[17,20],"box":24,"bracket":[15,18],"build":[4,6,26,28],"builder":[4,6,8],"built":[0,2,4,6,9,14,15,17,20,28,29,32],"builtin":[15,16,17,20,28],"busi":2,"byte":[11,12,13,15,20,28],"bytearrai":13,"c":[15,18,22],"calcul":[11,15],"call":[15,20,28],"callabl":[12,13,15,17,20,22,26,27,28],"callable_categori":17,"camel_cas":24,"camel_to_snak":24,"camelcas":24,"can":[0,2,4,6,8,9,10,11,13,14,15,17,18,20,28,29,30,31,32],"can_proce":[15,20,28],"cannot":[5,6,11,12,13,15,18,19],"canon":[7,10,15,17,18],"capabl":[0,4,7,15,18,19,22,29,32],"captur":[4,6,12,15,26,28],"case":[5,6,10,15,16,19,20,24,26,28],"casestandard":[15,18],"cat":24,"catch":[15,20,28],"categor":[2,5,6,9,10,13,15,16,17,19,28],"categori":[5,6,9,10,13,15,16,17,28],"caus":[8,20],"caution":13,"cd":31,"central":28,"certain":[15,18],"chain":[4,6,8,9,10,12,15,28],"chainabl":[12,15],"chang":31,"charact":10,"characterist":[15,18,20,22],"charli":[14,15,22],"check":[2,6,8,9,10,11,13,14,15,17,18,19,20,26,27,28,30,32],"check_typ":[7,8],"checkabl":[14,15,20,28],"cherri":22,"child":24,"circuit":[4,6],"citi":[15,20,28],"cl":[8,15,18,20,28],"clariti":[0,1,10],"class":[2,10,14,16,19,24,29,30,32],"class_method":[15,20,28],"classif":[10,13,15],"classmethod":[12,15,20,28],"classtyp":10,"classtype_co":10,"classtype_contra":10,"clean":[8,17,24],"clear":[0,5,10,15],"clone":31,"closest":[15,16],"cls_type":8,"code":[0,15,31],"codebas":[15,19],"coerc":[12,15],"coerce_to_typ":[12,15],"coercion":15,"coher":[4,6,8,24],"collect":[1,2,4,6,8,10,11,13,14,15,16,17,19,20,22,26,27,28],"collection_manipul":[3,23],"collectiont":[14,15],"collectiontyp":[10,15],"com":[9,31],"combin":[0,2,4,6,8,9,14,15,18,22,24,26,28],"common":[2,4,6,10,11,12,14,15,16,19,24,25,28],"commun":[6,10,15],"compar":[11,15,18],"comparablet":[15,21],"comparablet_co":[15,21],"comparablet_contra":[15,21],"comparablevalu":[15,18],"comparison":[15,18],"compat":[0,4,6,7,10,11,13,15,17,20,28],"compil":[8,9,14],"complement":20,"complet":[4,6,8,10,15,17,19],"complex":[2,4,6,8,9,10,11,13,14,15,16,17,20,22,27,28,30],"complex_data":8,"compon":[0,2,4,6,7,9,12,28,32],"component_typ":7,"compos":[4,6,9,12,13,28],"composit":[3,4,6,7,9,13,15,17,18,27,28,29,30],"composite_categori":17,"composite_typ":7,"composite_valid":2,"compositevalid":[2,9,15,18,26,28,29,30],"comprehens":[0,1,4,5,6,7,8,9,10,12,15,16,17,19,20,26,27,28,32],"comput":[12,15],"concret":[10,14,15,19],"condit":[2,4,6,9,13,20,28],"config":[15,20,28],"configur":[5,6,10,15,27,28],"configurationerror":[5,6],"conflict":[5,6],"conform":[0,8,10,14,15,18,27,28],"consecut":24,"consid":[15,16,17,20,28],"consist":[4,6,7,10,15,17,19,22,24,27,28],"constrain":[10,15],"constraint":[0,4,5,6,7,9,10,15,18,20,28,29,30],"construct":[4,5,6,8,15,18],"constructor":[8,27,28],"contact":31,"contain":[3,4,6,8,9,10,11,12,13,14,15,16,17,18,20,22,25,28],"container_categori":17,"container_compat":[11,13,15],"context":[4,5,6,9,10,14,15,17,20,28],"contextu":[8,15,20,28],"continu":[4,6,8],"contract":15,"contravari":[10,13,15,18],"control":6,"conveni":[11,15],"convent":[15,17,19,24],"convers":[3,4,5,6,7,8,9,10,11,13,14,15,18,20,25,27,28],"conversion_error":[5,6,9,28],"conversionresult":[8,12,15],"convert":[4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,22,24,25,26,27,28],"convert_typ":7,"convert_valu":[7,8],"convert_with_fallback":[12,15],"converted_valu":[4,6,8,9,27,28],"convertermap":[10,15],"convertermapgener":[10,15],"convertermapsr":[10,15],"converterprior":[10,15],"convertibletobool":12,"convertibletofloat":12,"convertibletoint":12,"convertibletostr":12,"coordin":[14,15],"core":[3,7,8,9,10,12,16,17,19,20,25,26,27,28,29,31,32],"correct":[1,2,14,15,20,28],"correctli":[4,6,9,24,28],"correspond":[10,15,16],"covari":[4,6,9,10,13,14,15,18,28],"coverag":16,"craft":[10,22],"creat":[0,2,3,4,5,6,7,8,9,12,14,15,16,18,22,24,26,27,28,29,31,32],"create_inst":8,"create_success":[12,15],"create_typ":[0,7,8,29,31],"create_valid":[27,28],"creation":[0,1,5,6,7,8,9,27,28,32],"criteria":[2,10,15,18],"critic":[8,13],"current":[4,6,9,15,16,27,28],"custom":[8,10,12,14,15,17,18,31,32],"custom_convert":12,"custom_typ":[14,15],"custom_user_inst":29,"custom_valid":2,"customboolean":[15,18,28],"customcontain":[15,18],"customfloat":[15,18,28],"custominteg":[15,18,28],"customiter":[15,18],"custommap":[15,18],"customobject":[15,18],"customs":[15,18],"customstr":[15,18],"customtyp":12,"customus":29,"customusertyp":29,"customvalid":2,"dark":8,"data":[1,2,4,5,6,8,9,10,13,14,15,18,20,22,25,27,28,29,30],"dataclass":[5,6,9,13,28],"date":13,"datetim":13,"debug":[4,6,8,13,15,20,28],"decis":[9,10,15],"decod":[12,15],"dedupl":[7,15,18,19,22],"deduplicate_list":22,"deduplicate_typ":[15,19],"deduplicate_viol":9,"deep":[8,17],"deeper":22,"deepli":8,"def":[2,8,12,15,18,19,20,28,29,30],"default":[4,6,8,10,12,15,20,28],"default_valu":[12,15],"defaultdict":17,"defin":[0,1,2,4,5,6,7,8,10,13,14,15,17,18,27,28,29,30],"definit":[3,4,5,6,7,8,9,10,14,15,20,28],"deliv":[10,15],"demonstr":[4,6,26,28,29,32],"depend":31,"depth":8,"describ":[9,13,15,16,17],"describe_typ":[15,16,17],"descript":[5,6,9,12,15,16,17,18,20,28],"descriptor":9,"design":[0,1,2,4,6,10,15,28,32],"desir":[10,15,18],"despit":[15,20,28],"destin":[10,15],"detail":[1,4,5,6,7,8,9,12,13,15,16,17,20,25,26,27,28,31,32],"detect":[17,20],"determin":[9,10,11,13,15,16,17,19,20,22,28],"develop":[0,1,2,10,15,32],"deviat":13,"diagnosi":[5,6,9,28],"dict":[7,8,11,12,13,14,15,16,17,18,19,20,22,24,25,27,28],"dict_list_schema":[14,15],"dict_schema":[14,28],"dict_valu":14,"dictionari":[8,10,14,15,17,18,22,25,27,28],"dictkv":[10,15],"dictkv_co":[10,15],"dictschemat":[10,14,15,27,28],"dictschemat_co":[10,15],"dictschemat_contra":[10,15],"differ":[4,6,9,13,15,17,18,28],"difficulti":[10,11,15],"digit":[5,6,9,28],"direct":[4,6,10,11,15,26,28],"directli":[4,6,8,9,10,12,15,19,26,27,28],"directori":[29,31],"displai":[17,24],"disrupt":0,"distanc":[10,11,15],"distinct":[0,22],"distinguish":[15,20,28],"divers":[9,10,15],"divid":22,"do":2,"doc":[2,29],"docstr":17,"document":[2,3,15,17,29,30],"doesn":[4,5,6,8,9,28],"don":[15,20,28],"dot":[10,15],"downcast":[11,15],"driven":15,"duck":13,"due":[5,6],"duplic":[8,9,10,15,18,22],"dure":[4,5,6,8,12,14,15],"dynam":[0,1,6,8,9,10,13,15,27,28,31,32],"e":[5,6,8,10,12,15,20,28,30],"each":[0,1,4,6,10,11,15,18,20,22,28,32],"easi":[0,28],"easier":[11,15],"easili":32,"ecosystem":[15,17,19],"edg":[4,6,9,16,19,20,28],"effect":[2,4,6,9,10,11,15,28,29],"effici":[0,4,6,8,15,20,22,28],"eidosian":[4,6,7,10,28],"either":[8,10,14,15],"eleg":[4,6,9,15,16,20,28],"element":[10,11,13,14,15,16,20,22,28],"elif":12,"elimin":[7,10,15],"ellipsi":[8,15,20,28],"els":29,"elsewher":30,"email":[9,15,20,28],"embodi":[4,6,10],"embrac":0,"emerg":[4,6],"emphas":0,"empow":0,"empti":[4,6,8,12,15,16,17,20,26,28],"enabl":[0,1,4,5,6,8,9,10,11,13,14,15,16,18,19,27,28],"encapsul":[4,6,9,12,15,20,26,28],"encount":[4,6,9,28,31],"end":[10,15],"endpoint":1,"enforc":[2,14,29,30],"english":24,"enhanc":[1,15,20,30],"ensur":[0,1,2,4,5,6,7,8,9,15,17,19,22,28,30,31,32],"entiti":10,"entri":[8,9],"enum":[5,6,9,13,28],"enumer":[5,6,9,13,15,28],"environment":[9,10,15],"equal":[15,18],"equival":[17,24],"error":[0,4,5,6,8,9,10,12,13,14,15,16,20,26,27,28,29],"errorhandl":[10,15],"errormessag":[8,10,15],"essenti":[2,6],"establish":[4,6,8,11,15],"etc":[12,15,16,17,20,28],"eval":[15,16],"evalu":[15,20,28],"even":[4,6,8,30],"evenandpositivevalid":30,"evennumbervalid":30,"evolv":0,"exact":[8,13],"exactli":[10,11,13,15],"exampl":[0,1,4,5,7,8,9,11,12,13,14,16,17,18,19,20,22,24,27,28,30,31],"example_funct":[15,20,28],"except":[3,4,8,9,10,12,15,20,26,28,30],"exception_factori":[12,15],"exclud":[15,20,28],"execut":[12,15],"exist":[0,10,11,15,16,18,19,20,28],"expect":[0,5,6,8,9,10,15,17,18,25,27,28,30],"expected_typ":[8,27,28],"explain":[5,6],"explan":[10,15],"explicit":[11,12,15],"explicitli":[11,13,15],"explor":[1,32],"export":6,"extend":[0,2,7,10,15,20,28,30],"extens":[0,2,32],"extra":6,"f":[6,12,15],"facilit":1,"factori":[3,15,18,28],"fail":[4,5,6,8,9,10,12,15,20,27,28,29,30],"failed_result":6,"failur":[4,5,6,8,9,10,12,15,26,28],"fall":[2,12,15],"fallback":[10,12,15],"fallback_typ":[12,15],"fallbackprovid":[10,15],"fals":[4,6,8,9,10,11,12,13,15,17,18,19,20,22,25,26,27,28],"fast":[4,6,8],"fatal":[13,15,20,28],"featur":[1,29,31],"field":[6,8,10,15,29],"field1":31,"field2":31,"fielddefinit":[8,10,15],"fielddefinitionst":[10,15],"fielddefinitionst_co":[10,15],"fielddefinitionst_contra":[10,15],"fieldswithdefault":[10,15],"fieldswithdefaultst":[10,15],"file":31,"filter":[15,20,22,28],"filter_dict":22,"final":[16,17],"find":[11,15,16,19,32],"find_common_supertyp":[11,15],"firewal":10,"first":[4,6,8,10,12,15,20,28],"fit":30,"fix":13,"flag":[10,15],"flatten":22,"flatten_list":22,"flexibl":[0,1,2,7,10,13,14,15,30,32],"float":[11,12,13,14,15,16,17,18,19,20,25,28],"flow":[4,6,9,28],"focu":32,"focus":12,"follow":[4,6,7,8,9,15,19,20,28,29,31],"for_docstr":17,"forg":[0,1,3,4,6,9,10,11,12,13,14,15,16,17,18,19,21,22,28],"form":[4,6,7,10,11,14,15,17,18,22,24,28],"format":[0,5,6,9,12,15,16,17,19,20,24,28,30],"format_messag":24,"format_type_annot":17,"format_type_nam":24,"format_validation_error":9,"found":[5,6,8,9,15,16,18,20,28],"foundat":[8,9,10,14,15,16,17,22],"fractal":[4,6],"framework":[2,4,6,7,9,10,28,29,30,32],"frequent":10,"friendli":[15,16],"from":[0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,22,24,26,28,29,30,31],"from_tri":[12,15],"from_valid":[26,28],"frozen":[5,6,9,10,15,28],"frozensett":[10,15],"frozensett_co":[10,15],"full":[4,6,8,9,14,28],"fulli":[10,15,17],"func":[12,15],"function":[0,1,6,7,8,9,10,13,14,18,29,31,32],"fundament":[4,6,10,11,13,15,28],"further":[1,12,15],"g":[6,10,15,20,28],"gener":[3,4,5,6,7,8,9,10,12,13,14,15,16,17,19,20,24,26,28],"get":[1,12,15,16,17,18,19,20,27,28,29],"get_attribut":[15,18],"get_common_supertyp":[15,16,19],"get_conversion_dist":[11,15],"get_error":[15,20,28],"get_fully_qualified_nam":17,"get_generic_arg":17,"get_issu":[15,20,28],"get_nam":[15,18],"get_python_type_for_nam":[15,16],"get_relationship":[11,15],"get_standardized_type_nam":15,"get_type_categori":[15,16,17],"get_type_hierarchi":[15,19],"get_type_nam":[15,16,17],"get_warn":[15,20,28],"git":31,"github":31,"given":[4,6,8,11,15,16,18,26,28],"got":6,"grammat":24,"greater":[5,6],"group":[15,16,22],"group_by_kei":22,"growth":0,"guarante":[4,6,8,9,10,12,15,22],"guard":[10,15],"guid":[1,13,31,32],"guidelin":31,"ha":[5,6,8,9,10,15,20,24,26,28],"handl":[2,5,6,8,9,10,12,13,14,15,16,17,18,19,20,22,24,25,28],"handler":[10,15],"happi":31,"has_attribut":[15,20,28],"has_warn":[15,20,28],"hashabl":[10,15,18,22],"hashablet":[15,21,22],"hashablet_co":[15,21],"hashablet_contra":[15,21],"have":[8,13,30,31],"hello":[0,8,12,15,18,20,28],"helloworld":2,"help":[5,6,17,31,32],"here":[14,30,31],"hex":[12,15],"hierarch":[11,14,15],"hierarchi":[5,6,7,10,15,16,17,19,20],"high":0,"higher":[6,10,15,31],"hint":[0,1,3,15,27,28],"hold":[10,13,15],"homogen":[10,14,15],"hope":32,"how":[0,2,10,15,17,29,30,31,32],"http":31,"http_respons":24,"httprespons":24,"human":[5,6,9,10,15,16,17,20,27,28],"i":[0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,22,25,26,27,28,29,30,31,32],"id":[14,28],"ident":[6,10,11,13,15],"identif":10,"identifi":[7,8,10,11,15,16,17,18,19,20,24,28],"identitytyp":10,"ignor":22,"illustr":29,"immut":[4,5,6,9,10,15,28],"implement":[4,6,8,9,10,11,15,18,20,26,28,29,30],"implicit":[11,15],"implicit_convert":[11,13,15],"implicitli":[11,13,15],"import":[0,2,6,7,8,9,12,15,17,19,20,28,29,30,31],"imposs":[10,11,15],"improv":[0,15],"includ":[1,2,4,5,6,8,9,12,15,16,17,19,20,22,26,28],"inclus":[26,28],"incompat":[5,6,8,10,11,13,15,18],"inconsist":[15,20,28],"incorpor":[4,6,9,28],"incorrect":[5,6,9,28],"increas":[10,15],"independ":0,"index":[14,15],"index_seg":[14,15],"indic":[4,6,8,9,10,11,14,15,28],"individu":8,"indivis":13,"inf":[11,12,15],"infer":8,"info":[10,13,15,20,28],"inform":[1,4,5,6,8,9,10,12,13,14,15,16,17,18,20,25,26,28,31],"inherit":[4,5,6,10,11,13,15,16,18,19,20,28],"initi":[4,5,6,7,8,12,15,20,26,28],"inner":17,"input":[10,12,15,18,20,22,24,28],"insensit":[15,16],"inspect":[15,17,18,20,28],"inspect_typ":7,"instal":32,"instanc":[0,4,6,8,9,10,15,18,20,26,27,28,29,30,31],"instanti":[8,15,19],"instead":8,"int":[2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,24,25,26,27,28,29,30,31],"int_list_schema":[14,15],"int_schema":[14,28],"int_typ":[14,15],"int_valid":2,"int_valu":14,"intdedupl":[15,18],"integ":[2,4,6,8,14,15,18,24,25,26,28,30],"integervalid":[4,6,29],"integr":[1,2,4,6,7,8,9,15,28],"intellig":[12,15],"intent":10,"interconnect":15,"interfac":[4,6,8,9,10,11,13,15,17,18,19,20,28],"intern":[4,6,8,27,28],"interpret":[12,15,25,28],"introspect":[7,14],"inttostrconvert":[15,18],"intvalid":[15,18],"invalid":[5,6,8,12,15,18,20,25,28,29],"invalid_data":8,"invalid_valu":[5,6,9,28],"invari":14,"involv":31,"ip":13,"irregular":24,"is_abstract_typ":[15,19],"is_block":[13,15,20,28],"is_cal":[15,20,28],"is_collect":[15,20,28],"is_compat":13,"is_compatible_with_typ":[15,20,28],"is_container_typ":17,"is_convert":[11,15],"is_error":[13,15,20,28],"is_funct":[15,20,28],"is_generic_typ":[15,17,19],"is_in_rang":[26,28],"is_inst":8,"is_instance_of_ani":[15,20,28],"is_method":[15,20,28],"is_non_empty_str":[15,20,28],"is_not_empti":[26,28],"is_numer":[15,20,28],"is_optional_typ":17,"is_posit":[26,28],"is_primitive_typ":[15,17],"is_protocol_inst":[15,20,28],"is_subclass_saf":[15,20,28],"is_subtype_of":[15,18],"is_typ":[15,18],"is_type_of":7,"is_valid":[6,15,20,28,29],"is_valid_composit":2,"is_valid_custom":2,"is_valid_identifi":[15,20,28],"is_valid_int":2,"is_valid_length":[26,28],"is_valid_rang":2,"is_valid_type_descriptor":9,"isdigit":12,"isinst":[2,5,6,8,9,12,15,18,20,28,30],"issu":[5,6,13,15,20,28,31],"issubclass":[15,20,28],"item":[14,15,18,22,25,28],"item_typ":[25,28],"items_where_fals":22,"items_where_tru":22,"iter":[10,15,18],"iterablet":[10,15],"iterablet_co":[10,15],"iteratort":[10,15],"iteratort_co":[10,15],"its":[1,4,6,8,9,15,18,19,20,24,28,29,31],"john":14,"john_do":29,"json":[5,6,8,9,28],"just":[12,15,16,19],"k":[10,13,14,15,17,18,21,22],"k_co":[15,18,21],"k_contra":[15,18,21],"keep":[15,19],"kei":[4,5,6,8,9,10,14,15,18,22,25,27,28],"key_seg":[14,15],"key_typ":[25,28],"keyerror":[15,18],"keyword":[8,15,18],"kind":[5,6,9,28],"known":[10,15],"kwarg":[8,15,18,27,28],"kwd":[5,6,9,13,28],"lambda":[10,12,13,15,20,22,28],"languag":[10,15],"later":8,"layer":15,"lead":24,"least":[15,20,28],"len":[2,15,18,20,22,28],"length":[2,15,16,18,22,26,28],"lengthvalid":2,"less":[15,18],"letter":[15,20,24,28],"level":[6,7,13,15,20,22,28],"leverag":[11,15],"librari":[5,6],"light":8,"like":[4,6,8,9,10,12,14,15,16,17,18,19,20,25,28],"link":[10,15,32],"liskov":8,"list":[4,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,24,25,26,27,28],"list_schema":[14,28],"list_valu":14,"listschemat":[14,15],"listt":[10,15],"listt_co":[10,15],"liter":[12,15],"ll":32,"local":31,"locat":[5,6,9,15,20,28],"log":24,"logic":[2,4,6,9,14,15,18,20,28,29,30],"longer":22,"look":[15,18,20,28],"lookup":[10,15,17,18],"loop":[15,18],"lower":[11,15,18,20,28],"lowercas":13,"machin":31,"mai":[4,6,12,15,22,26,28],"main":9,"maintain":[0,4,5,6,7,8,9,10,15,18,20,22,28,31,32],"make":[0,8,12,15,20,26,28],"manag":[0,15,16,32],"mani":[15,20,28],"manipul":[1,7,9,14,15,22],"manner":[4,6],"manual":31,"map":[3,7,8,10,12,14,15,18,22,28],"mappingtyp":[10,15],"match":[5,6,8,9,10,13,15,18,20,27,28],"mathemat":[7,10,11,15],"max_length":[0,26,28,29],"max_valu":[2,26,28,29],"maximum":[10,15,20,26,28],"maybetyp":16,"mean":[11,15],"meaning":[11,15,16,19],"meant":[15,19],"measur":[10,15,16],"mechan":[4,10,20],"meet":[2,5,6,10,15,18],"merg":[4,6,9,28],"messag":[5,6,8,9,10,12,13,15,20,24,28],"met":[2,5],"metadata":[15,18],"method":[4,6,8,9,11,13,15,18,19,20,22,25,26,27,28,32],"metric":[11,15],"might":[8,12,13,15,20,25,28],"min_length":[26,28,29],"min_valu":[2,26,28,29],"mind":0,"minim":6,"minimum":[26,28],"minor":[15,20,28],"mismatch":[6,8],"miss":[5,6,8,12,15,27,28],"missing_attr":[15,20,28],"missing_kei":[5,6,9,28],"mistak":10,"mix":[15,16],"mode":12,"modifi":[4,6,9,22,28],"modul":[0,1,2,6,7,9,15,28,30,31,32],"modular":[0,28,32],"monad":[4,6,9,12,15,28],"more":[0,2,4,6,12,14,15,16,17,20,26,28,29,30,31],"most":[11,15,16,19],"mro":[11,15,19],"multi":20,"multi_union":[14,15],"multipl":[2,4,6,8,9,10,11,12,15,16,18,19,20,22,26,28,30],"must":[2,4,5,6,8,13,22,24,27,28,30],"my_string_inst":0,"myclass":[10,14,15],"mystringtyp":0,"mytyp":31,"n":[12,15,22],"name":[3,7,8,9,10,12,13,14,15,16,18,19,20,22,24,27,28,29],"namedtupl":13,"nan":[12,15],"navig":[0,31],"necessari":[0,15,19],"need":[2,8,10,11,12,14,15,29,30],"nest":[8,10,14,15,17,22,24,28],"nested_list":22,"nested_schema":[8,14,28],"network":13,"never":[10,12,15],"new":[0,4,6,7,8,9,15,18,22,26,28],"newli":8,"node":[14,15],"non":[10,15,17,20,28],"none":[4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,25,26,27,28],"nonetyp":[15,16],"normal":[7,13,15,17,18,19,24],"normalize_typ":17,"not_a_class":[15,20,28],"not_a_numb":[8,12,15],"not_an_int":8,"not_cal":[15,20,28],"notat":[10,15,18],"notif":8,"notimpl":[15,18],"notimplementederror":[4,6,28],"noun":24,"number":[2,7,11,13,15,16,18,19,20,22,28,30],"numer":[2,10,11,13,14,15,20,24,28],"numerictyp":[10,15],"o":22,"obj":[15,18,20,28],"object":[4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,24,25,26,27,28],"obtain":17,"occur":[4,6,8,9,12,15,28],"octal":[12,15],"off":[12,15],"offer":7,"onc":[30,31],"one":[4,6,8,9,12,15,17,18,20,22,27,28],"onli":[4,6,8,10,11,13,14,15,16,19,20,22,28],"open":31,"oper":[4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,22,27,28],"optim":[7,20],"option":[4,6,8,9,10,11,12,13,15,16,17,19,20,24,25,26,27,28],"optionalconvert":[10,15],"optionalint":7,"or_els":[12,15],"or_else_get":[12,15],"or_rais":[12,15],"orchestr":[4,6],"order":[9,10,11,15,19,22],"ordereddict":22,"organ":[0,15,20,28],"origin":[4,6,8,9,12,15,22,28],"other":[4,5,6,9,10,12,13,15,18,19,22,28],"otherwis":[4,6,8,9,10,11,12,13,15,17,18,19,20,25,26,28],"our":31,"out":32,"outcom":[4,6,9,10,14,15,28],"outlin":2,"output":[10,15],"outsid":[15,20,28],"over":[4,6,15,18,28],"overal":0,"overhead":6,"overload":8,"overrid":[4,6,26,28],"own":29,"packag":[0,31],"page":3,"pair":[10,15,18,22],"paramet":[4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,22,24,25,26,27,28],"parameter":[15,19],"parametr":[10,15],"parent":[10,15,20,28],"parentspectyp":[10,15,20,28],"parentspectype_co":[10,15],"parentspectype_contra":[10,15],"partial":13,"particular":[15,18],"partit":22,"partition_list":22,"pascal_cas":24,"pascalcas":24,"pass":[4,5,6,8,9,15,18,19,20,27,28,30],"path":[5,6,7,8,9,10,12,14,15,17,20,26,27,28],"pathlib":[12,15],"pathnorm":[15,18],"pathsegmentt":[14,15],"patht":[14,15],"pattern":[0,4,6,8,9,10,12,15,25,27,28],"peopl":22,"pep":[15,19],"perfect":7,"perform":[4,6,8,12,13,15,20,22,24,27,28],"permiss":13,"person":[8,15,18],"person_schema":[8,14,28],"person_typ":8,"personfactori":[15,18],"pip":31,"pipelin":[4,6,8,9,28],"pleas":[1,29,31],"plural":24,"point":[8,9,15,18,28],"polymorph":[10,14,15],"popul":8,"posit":[8,15,18,26,28,30],"positivenumbervalid":30,"possibl":[4,5,6,9,11,12,13,15,25,28],"possibli":8,"potenti":[4,6,9,10,11,13,15,18,20,28],"power":[29,30],"practic":[1,13,32],"preced":[10,15],"precis":[1,4,5,6,7,8,9,10,11,13,14,15,16,19,20,24,28,32],"predic":[10,15,22],"predicatefunc":[10,15],"predicatefunc_contra":[10,15],"predict":22,"prefer":[12,15],"presenc":13,"present":[8,17,27,28,31],"preserv":[4,6,8,9,12,14,15,18,22,24,26,28],"prevent":[6,8,13,15,20,28],"previous":8,"primari":[8,10,12,15],"primary_typ":[12,15],"primit":[8,13,15,17],"primitive_categori":17,"primitivetyp":[10,15],"principl":[4,5,6,7,8,9,10,20,26,28],"print":[6,12,15,20,28,29,30,31],"prioriti":[10,15],"privat":24,"problem":[15,20,28],"proce":[15,20,28],"process":[4,6,8,9,10,13,15,17,28,30,32],"produc":[15,18],"profil":8,"program":0,"programmat":[8,17],"progress":[10,15],"project":[2,29,31,32],"promot":0,"proper":[4,6,8,12,15,18,20,25,27,28],"properli":[4,6,8,9,12,15,16,17,20,25,28],"properti":[4,6,9,13,15,16,28],"protect":24,"protocol":[1,3,9,11,12,13,15,16,17,20,28],"protocol_compat":[11,13,15],"provid":[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,26,27,28,29,30,32],"pure":[4,6,9,10,15,20,28],"purpos":1,"pyproject":31,"python":[0,1,5,6,8,9,10,11,12,14,15,16,17,20,24,28,29,31,32],"qualifi":17,"qualiti":0,"quantifi":[11,15],"queri":[15,20,28],"question":31,"quick":31,"quickli":29,"r":[7,8,10,12,15,21,31],"r_co":[15,21],"r_contra":[15,21],"rais":[4,5,6,8,12,15,18,20,25,26,27,28,30],"rang":[2,15,20,26,28],"range_valid":2,"rangevalid":2,"rather":[4,6,9,10,12,13,15,16,19,20,22,26,28],"read":[10,14,15,31],"readabl":[5,6,7,9,10,15,16,17,20,24,27,28],"reason":8,"receiv":6,"recommend":[15,20,28],"recommended_max":[15,20,28],"record":[4,5,6,8,9,28],"recov":[10,12,15],"recoveri":[10,12,15],"recovery_func":[12,15],"recurs":[4,5,6,7,8,9,13,14,15,22,26,27,28],"reduc":0,"redund":[7,15,19],"refer":[1,2,10,15,29,31,32],"referenti":13,"refin":[4,6,26,28],"reflect":[15,18],"regardless":13,"regist":[4,6,8,12,15,18,30],"register_convert":12,"register_typ":8,"register_valid":30,"registr":[4,6,8,10,15,18],"registri":[8,10,15,18],"regular":[15,20,28],"rel":[11,15],"relat":[5,6,8,9,10,13,15,20,28],"relationship":[10,11,13,15,16,17,19,20,28],"reli":[4,6,26,28],"reliabl":[0,15],"remain":[4,6,9,28],"remap":22,"remov":[9,15,18,19,22],"replac":[15,18,31],"report":[4,5,6,8,9,10,12,13,14,15,18,20,26,27,28],"repositori":31,"repr":[12,15],"repres":[0,8,10,11,13,14,15,19,28],"represent":[5,6,7,9,10,12,13,14,15,17,18,20,24,25,27,28],"request":[8,27,28],"requir":[5,6,8,9,10,11,13,15,18,20,28,30,31],"require_all_kei":[8,27,28],"resolut":[10,11,15,19],"resolv":[10,15],"respons":[0,6],"result":[4,6,7,8,9,10,12,13,14,15,20,26,27,28,30],"retriev":[15,18,19],"return":[2,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30],"richer":13,"rigor":0,"robust":[0,1,2,12,15,19,20,30,32],"root":[6,8],"rule":[2,5,6,15,18,20,24,28,29,30],"run":[4,6,8],"runtim":[0,6,8,9,10,13,14,15,18,19,20,28],"runtime_check":[15,20,28],"s_co":[15,21],"s_contra":[15,18,21],"safe":[8,10,11,12,14,15,20,25,28],"safe_":[12,15],"safe_bool_convert":[12,15,25,28],"safe_convert":[7,8],"safe_float_convert":[12,15,25,28],"safe_int_convert":[12,15,25,28],"safe_str_convert":[12,15,25,28],"safer":[0,5,6,9,15,20,28],"safeti":[1,4,6,7,8,9,10,12,14,15,16,20,22,27,28],"same":[4,6,8,9,10,11,13,14,15,18,28],"satisfi":[11,13,15,20,22,28],"scenario":[1,2,9,10,12,15,20,27,28],"schema":[5,6,8,9,10,14,15,27,28],"schema_mismatch":[5,6,9,28],"schemanodet":[14,15],"schemasequencet":[14,15],"schematypemappingt":[14,15],"schematypet":[8,10,14,15,27,28],"schematypet_co":[10,15],"schematypet_contra":[10,15],"schemavaluenodet":[14,15],"schemavaluet":[8,10,14,15],"schemavaluet_co":[10,15],"schemavaluet_contra":[10,15],"script":[31,32],"seamlessli":0,"second":[10,15],"secondari":[12,15],"section":[1,2,31,32],"secur":[15,20,28],"see":[5,6],"segment":[14,15],"select":[10,15],"self":[2,4,5,6,8,9,12,13,15,18,19,20,28,29,30],"semant":[7,12,13,15,16,18,25,28],"sensit":15,"sequenc":[8,9,10,11,14,15,16,17,19,20,22,26,27,28],"sequencet":[10,15],"sequencet_co":[10,15],"sequencetyp":[10,15],"sequenti":[4,6,10,15],"serial":[5,6,17],"seriou":[13,15,20,28],"serv":[8,9,16],"set":[1,4,6,8,9,10,14,15,17,18,20,28,31],"sett":[10,15],"sett_co":[10,15],"settyp":[10,15],"setup":32,"sever":[13,15,20,28],"shape":13,"share":[9,10,11,13,15,22],"short":[4,6,15,20,22,28],"should":[8,12,13,15,17,20,28],"showcas":32,"side":[6,10,15],"signatur":[5,6,8],"signific":0,"silent":[12,15],"similar":[11,14,15,16],"simpl":[4,6,8,9,10,14,15,16,17,24,26,27,28,29,30],"simpler":[4,6,9,26,28],"simpletyperegistri":[15,18],"simplifi":[4,6,8,15,19,28],"singl":[2,6,8,10,14,15,20,22,28],"singletypet":[14,15],"singular":24,"situat":[10,15],"size":[15,16,18],"smaller":[11,15],"snake_cas":24,"snake_to_camel":24,"snakecas":24,"solut":30,"some":[5,6],"sourc":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28],"source_typ":[11,15,17,20,28],"space":22,"special":[6,9,10,12,13,14,15,16,17,19,22,24],"special_categori":17,"specif":[0,2,4,5,6,7,8,9,10,11,14,15,16,18,19,20,25,26,28,29,30],"specifi":[2,5,6,8,10,14,15,18,20,22,26,27,28,31],"sphinx":3,"squar":[15,18],"standard":[0,3,7,10,13,14,15,17,18,24],"standardize_type_nam":[15,19],"standardize_typenam":24,"start":[1,15,20,28,29],"state":[4,6,9,10,15,28],"static":[8,14,15,18,19,25,26,27,28],"static_method":[15,20,28],"staticmethod":[15,20,28],"statu":[4,6,8,9,10,12,15,27,28],"stop":[12,15],"storag":22,"store":[8,22],"str":[2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,24,25,26,27,28,29,31],"str_type":[14,15],"straightforward":2,"strateg":[10,15],"strategi":[13,15],"streamlin":[4,6,9,28],"street":[10,14,15],"strict":[0,6,8,9,12,13,15,20,32],"string":[2,4,5,6,8,9,10,12,13,14,15,16,17,18,20,22,24,25,26,27,28],"string_format":[3,23],"stringforg":[15,18],"stringvalid":[0,29],"strong":[14,15,18,22],"strongli":[10,14,15],"struct":13,"structur":[0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,22,24,28,32],"structurally_compat":[11,13,15],"studi":24,"style":[15,19],"subclass":[4,6,13,15,17,20,26,28],"subject":24,"submodul":[0,10],"subscript":[15,18],"substitut":[8,13],"subtyp":[10,11,13,15,18,19],"succe":[8,25,28],"succeed":[4,6,8,9,12,15,28],"success":[6,8,10,12,15,20,28],"successfulli":[10,12,15],"suffic":2,"suitabl":[10,12,15,20,28],"sum":[10,15],"summari":[15,20,28],"super":30,"supertyp":[10,11,13,15,16,18,19],"support":[4,6,8,10,14,15,17,18,19,22,27,28],"supportsboolconvers":[15,18,28],"supportscomparison":[15,18],"supportsequ":[15,18],"supportsfloat":[15,18,28],"supportsfloatconvers":[15,18,28],"supportsgetattr":[15,18],"supportsgetitem":[15,18],"supportsint":[15,18,28],"supportsintconvers":[15,18,28],"supportsiter":[15,18],"supportslen":[15,18,20,28],"supportslength":[15,18],"supportsmap":[15,18],"supportsstrconvers":[15,18],"supportstypecheck":[15,18],"syntax":[15,17,20,28],"system":[4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,21,22,24],"system32":[15,18],"systemat":11,"t":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,25,26,27,28],"t_co":[7,10,15,18,21],"t_contra":[7,10,15,18,21],"tailor":[2,29,30],"take":[12,15,26,28],"target":[5,6,8,10,11,12,13,14,15,17,18,20,27,28],"target_typ":[8,11,12,15,17,18,20,27,28],"taxonomi":[5,6,9,15,28],"tcallabl":[15,21],"tcallable_co":[15,21],"tcallable_contra":[15,21],"tcollect":[15,21],"tcollection_co":[15,21],"tcollection_contra":[15,21],"team":[7,8],"technic":13,"temperatur":24,"templat":[4,6,28],"terror":[10,15,21],"terror_co":[15,21],"terror_contra":[15,21],"test":[10,15],"text":[10,13,15,16],"texttyp":10,"textual":10,"than":[4,5,6,9,10,12,13,15,16,18,19,20,22,26,28],"thei":[2,13],"them":[4,6,20,22,26,28,29],"theme":8,"thi":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,27,28,29,30,31,32],"thirti":8,"those":[15,16],"thread":6,"through":[4,6,7,8,9,10,11,12,14,15,18,26,28,32],"throughout":[4,6,10,14,15,17,22],"tightest":[15,16],"time":[8,9,13,14,22],"timeout":[15,20,28],"tinstanc":[8,15,21],"tinstance_co":[15,21],"tinstance_contra":[15,21],"tmp":[12,15],"to_float":[12,15],"to_int":[12,15],"togeth":15,"toml":31,"toolkit":7,"total":22,"track":[5,6,8,9,12,15,28],"transform":[4,6,7,8,9,10,12,15,18,19,22,24,28],"transformfunc":[10,15],"transformfunc_co_contra":[10,15],"transpos":22,"transpose_dict_of_list":22,"transposit":22,"travers":[10,14,15,19],"treat":[15,20,28],"treatment":17,"tree":[8,10,15],"tri":[12,15],"true":[2,4,6,8,9,10,11,12,13,15,16,17,18,19,20,22,25,26,27,28],"try":[5,6,8,12,15,27,28,30],"try_convert":[12,15],"tryresult":[10,15],"tupl":[8,10,11,14,15,16,17,19,20,22,27,28],"tuplet":[10,15],"tuplet_co":[10,15],"tvalu":[15,21],"tvalue_co":[15,21],"tvalue_contra":[15,21],"twenti":6,"two":[10,11,13,15,17,20,22,28],"txt":31,"typ":[15,16,17,19,24,27,28],"type":[0,1,2,3,4,5,6,7,8,9,22,24,25,26,27,28],"type_forg":[0,1,2,3,30,31],"type_info":[7,15],"type_mismatch":6,"type_nam":[8,15,16],"typecategori":[13,15,16],"typecategoryliter":17,"typecompat":[11,13,15],"typeconvert":[10,12,15,18],"typeconverterprotocol":15,"typeconvertersaf":[10,15],"typecreationerror":[5,6,8],"typedconvert":[15,18],"typededupl":[15,18],"typedescript":16,"typedist":[10,11,15],"typeerror":[4,6,8,12,15,18,20,28],"typefactori":[15,18],"typeforg":[4,5,6,7,8,9,15,18,29,30],"typeforgebas":[4,6,8],"typeforgeexcept":[5,6],"typeguardfunc":[10,15],"typeguardfunct":[10,15],"typehierarchi":[10,15],"typeidentifi":[10,15],"typeinfo":[15,18],"typemap":[10,15],"typemapfrom":[10,15],"typemapsr":[10,15],"typemapto":[10,15],"typematch":[10,15],"typenam":[8,10,15,16],"typenorm":[15,18],"typeobject":[15,16],"typepath":[10,15],"typepreced":[10,15],"typeprotocol":17,"typeregistri":[8,10,15,18],"typeregistryprotocol":15,"typeregistryt":[10,15],"typeregistryt_co":[10,15],"typeregistryt_contra":[10,15],"typerelationship":[10,15],"typerelationshipanalyz":[11,15],"typestandard":[15,18],"typevalid":2,"typevar":8,"typeviol":[4,5,6,8,9,28],"typeviolationkind":[5,6,9,28],"typic":[6,9,15,20,28],"u":[8,10,11,12,15,16,17,21],"u_co":[10,15,21],"u_contra":[15,21],"underli":8,"underscor":[15,20,24,28],"understand":[15,19,29],"unif":19,"unifi":[8,9],"union":[8,12,13,14,15,17,19,24,27,28],"union_schema":[14,28],"union_typ":[14,15],"uniontypet":[14,15],"uniqu":[8,10,15,22,30],"unique_id":[14,15],"unit":13,"unknown":[15,16,27,28],"unlik":[4,6,8,12,15,20,28],"unord":[10,15],"unusu":[15,20,28],"up":[15,18,31],"upcast":[11,15],"updat":[15,20,28],"upon":[4,6,26,28],"upper":[15,20,28],"uppercas":24,"url":13,"us":[0,2,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,27,28,30,31,32],"usabl":[10,15],"usag":[1,9,10,14,15,32],"user":[2,5,6,8,9,10,14,15,16,20,28,29],"user_inst":29,"usernam":[29,31],"username_valid":29,"userschema":9,"usertyp":29,"uservalid":29,"utf":[12,15],"util":[0,2,3,6,7,9,11,12,15,16,17,19,20],"v":[10,13,14,15,17,18,21,22,27,28],"v_co":[15,18,21],"v_contra":[15,21],"valid":[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,18,24,31,32],"valid_nam":[15,20,28],"validate_and_convert":[7,8],"validate_boolean":[25,28],"validate_dict":[25,27,28],"validate_dict_schema":[7,8],"validate_float":[25,28],"validate_integ":[25,28],"validate_list":[25,28],"validate_recurs":[7,8,27,28],"validate_str":[25,28],"validate_typ":[7,8,27,28],"validate_with_detail":[4,6,8,25,26,28],"validationchain":10,"validationcontext":[9,10,15],"validationerror":[5,6],"validationfunc":[10,15],"validationfunct":[10,15],"validationfunct_contra":[10,15],"validationissu":[15,20,28],"validationlevel":13,"validationopt":[10,15],"validationpath":[8,10,15],"validationreport":[15,20,28],"validationresult":[4,6,8,9,10,15,25,26,27,28],"validationresultt":[10,14,15],"validationsever":[13,15,20,28],"validationstrategi":[10,15],"validationviol":8,"validationwithpath":[10,15],"validator_typ":[27,28],"validatorfactori":[9,27,28],"valu":[2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,24,25,26,27,28,30],"value_typ":[25,28],"valueerror":[8,12,15,18,25,27,28,30],"vari":[14,15],"variabl":[3,11,12,14,15,18,20,28],"varianc":[10,13,15,18],"variat":24,"variou":[12,15,18,19,24,25,27,28],"verdict":[11,15],"verif":[7,9,10,13,15,18,19,20],"verifi":[7,8,15,18,20,28],"version":[7,12,13,15,16,17,18,19,20,21,28],"via":19,"view":[14,15],"violat":[4,5,6,8,9,15,20,26,28],"violationkindliter":5,"vocabulari":[10,13],"wa":[10,12,15],"wai":[4,6,8,9,28,30],"walk":32,"warn":[13,15,20,28],"we":[29,31,32],"welcom":[1,31,32],"well":[6,7],"were":[15,20,28],"when":[5,6,8,10,12,13,15,17,20,28],"where":[2,4,6,10,12,13,14,15,17,18,22],"whether":[4,6,8,9,12,15,17,18,19,20,22,27,28],"which":[15,19,20,22,28,32],"while":[0,4,6,7,8,9,10,14,15,18,20,22,28],"wide":8,"window":[15,18],"with_converted_valu":[4,6,9,28],"within":[0,2,8,14,15,18,26,28,30,32],"without":[0,5,6,8,10,13,15,18,20,22,28],"won":[15,20,28],"word":24,"work":[15,20,22,28],"wrapper":[15,20,28],"write":0,"wrong":[25,28],"wrong_typ":[5,6,8,9,28],"x":[10,12,15,20,22,28],"xfe":[12,15],"xff":[12,15],"y":[12,15],"ye":[12,15,25,28],"yield":[15,18],"you":[30,31,32],"your":[30,31],"yourusernam":31,"zero":[10,15],"zipcod":[5,6,9,28]},"titles":["EIDOS: Self-Image Core Framework","EIDOS: Self-Image Core Framework API Documentation","EIDOSIAN VALIDATORS","API Reference","type_forge.core.base","type_forge.core.exceptions","type_forge.core","type_forge.forge","type_forge.forge.type_forge","type_forge","type_forge.typing.aliases","type_forge.typing.analysis","type_forge.typing.conversion","type_forge.typing.definitions","type_forge.typing.hints","type_forge.typing","type_forge.typing.mapping","type_forge.typing.naming","type_forge.typing.protocols","type_forge.typing.standardization","type_forge.typing.validation","type_forge.typing.variables","type_forge.utils.collection_manipulation","type_forge.utils","type_forge.utils.string_format","type_forge.validators.basic","type_forge.validators.composite","type_forge.validators.factory","type_forge.validators","Basic Usage of the type_forge Module","Custom Validators in Type Forge","Getting Started with Type Forge","EIDOSIAN TYPE FORGE DOCUMENTATION"],"titleterms":{"1":29,"2":29,"3":29,"alias":10,"analysi":11,"api":[1,3,32],"attribut":[5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,25,26,27,28],"base":4,"basic":[2,25,29],"class":[4,5,6,8,9,11,12,13,15,17,18,20,25,26,27,28],"collection_manipul":22,"combin":30,"compon":[1,15],"composit":[2,26],"conclus":[0,2,29,30],"content":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,32],"contribut":31,"convers":12,"core":[0,1,4,5,6,15],"creat":30,"creation":29,"custom":[2,29,30],"definit":13,"document":[1,31,32],"eido":[0,1],"eidosian":[2,32],"exampl":[2,6,10,15,29,32],"except":[5,6],"expans":0,"factori":27,"featur":[0,15],"forg":[7,8,29,30,31,32],"framework":[0,1],"function":[12,15,16,17,19,20,22,24,26,28],"futur":0,"get":[31,32],"hint":14,"imag":[0,1],"implement":2,"instal":31,"kei":[0,1],"link":1,"map":16,"modul":[4,5,8,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,29],"name":17,"note":[6,7,15],"overview":[0,1,2,32],"packag":[6,7,9,15,28],"prerequisit":31,"protocol":18,"refer":3,"self":[0,1],"standard":19,"start":[31,32],"string_format":24,"submodul":[6,7,9,15,23,28],"support":31,"tabl":32,"type":[10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,32],"type_forg":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"us":29,"usag":[0,2,29,30,31],"util":[22,23,24],"valid":[2,20,25,26,27,28,29,30],"variabl":21}})